[{"/workspace/algocloud-frontend/src/index.tsx":"1","/workspace/algocloud-frontend/src/App.tsx":"2","/workspace/algocloud-frontend/src/modules/auth/authToken.tsx":"3","/workspace/algocloud-frontend/src/modules/auth/authService.tsx":"4","/workspace/algocloud-frontend/src/modules/settings/settingsService.tsx":"5","/workspace/algocloud-frontend/src/modules/tenant/tenantService.tsx":"6","/workspace/algocloud-frontend/src/i18n/index.tsx":"7","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/LocalStorage.js":"8","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/GlobalData.js":"9","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/User.js":"10","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/TokenData.js":"11","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/Application.js":"12","/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/PairData.js":"13","/workspace/algocloud-frontend/src/modules/store.tsx":"14","/workspace/algocloud-frontend/src/modules/tenant/tenantSubdomain.tsx":"15","/workspace/algocloud-frontend/src/modules/auth/authInvitationToken.tsx":"16","/workspace/algocloud-frontend/src/modules/auth/authCurrentTenant.tsx":"17","/workspace/algocloud-frontend/src/view/shared/routes/RoutesComponent.tsx":"18","/workspace/algocloud-frontend/src/modules/shared/axios/authAxios.tsx":"19","/workspace/algocloud-frontend/src/view/dashboard/analytics/apollo/queries.js":"20","/workspace/algocloud-frontend/src/view/dashboard/analytics/apollo/client.js":"21","/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/returns.ts":"22","/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/tokenLists.ts":"23","/workspace/algocloud-frontend/src/i18n/es.tsx":"24","/workspace/algocloud-frontend/src/i18n/pt-BR.tsx":"25","/workspace/algocloud-frontend/src/i18n/en.tsx":"26","/workspace/algocloud-frontend/src/modules/initializers.tsx":"27","/workspace/algocloud-frontend/src/modules/reducers.tsx":"28","/workspace/algocloud-frontend/src/config/index.tsx":"29","/workspace/algocloud-frontend/src/modules/auth/authSelectors.tsx":"30","/workspace/algocloud-frontend/src/view/shared/routes/EmailUnverifiedRoute.tsx":"31","/workspace/algocloud-frontend/src/view/shared/routes/SuperadminRoute.tsx":"32","/workspace/algocloud-frontend/src/view/shared/routes/InactiveUserRoute.tsx":"33","/workspace/algocloud-frontend/src/view/shared/CustomLoadable.tsx":"34","/workspace/algocloud-frontend/src/view/shared/routes/PublicRoute.tsx":"35","/workspace/algocloud-frontend/src/view/shared/ProgressBar.tsx":"36","/workspace/algocloud-frontend/src/view/shared/routes/EmptyTenantRoute.tsx":"37","/workspace/algocloud-frontend/src/view/routes.tsx":"38","/workspace/algocloud-frontend/src/view/shared/routes/PrivateRoute.tsx":"39","/workspace/algocloud-frontend/src/view/shared/routes/EmptyPermissionsRoute.tsx":"40","/workspace/algocloud-frontend/src/modules/layout/layoutSelectors.tsx":"41","/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/index.js":"42","/workspace/algocloud-frontend/src/view/dashboard/analytics/constants/index.js":"43","/workspace/algocloud-frontend/src/modules/auth/authInitializer.tsx":"44","/workspace/algocloud-frontend/src/modules/auth/authReducers.tsx":"45","/workspace/algocloud-frontend/src/modules/layout/layoutReducers.tsx":"46","/workspace/algocloud-frontend/src/modules/tenant/tenantReducers.tsx":"47","/workspace/algocloud-frontend/src/modules/settings/settingsReducers.tsx":"48","/workspace/algocloud-frontend/src/config/production.tsx":"49","/workspace/algocloud-frontend/src/modules/superadmin/superadminReducers.tsx":"50","/workspace/algocloud-frontend/src/modules/plan/planReducers.tsx":"51","/workspace/algocloud-frontend/src/modules/user/userReducers.tsx":"52","/workspace/algocloud-frontend/src/modules/order/orderReducers.tsx":"53","/workspace/algocloud-frontend/src/modules/auditLog/auditLogReducers.tsx":"54","/workspace/algocloud-frontend/src/modules/product/productReducers.tsx":"55","/workspace/algocloud-frontend/src/modules/customer/customerReducers.tsx":"56","/workspace/algocloud-frontend/src/modules/auth/permissionChecker.tsx":"57","/workspace/algocloud-frontend/src/view/shared/LoadingComponent.tsx":"58","/workspace/algocloud-frontend/src/view/dashboard/DashboardPage.tsx":"59","/workspace/algocloud-frontend/src/view/layout/Layout.tsx":"60","/workspace/algocloud-frontend/src/security/permissions.tsx":"61","/workspace/algocloud-frontend/src/view/superadmin/analytics/AnalyticsPage.tsx":"62","/workspace/algocloud-frontend/src/view/superadmin/tenant/form/TenantFormPage.tsx":"63","/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListPage.tsx":"64","/workspace/algocloud-frontend/src/view/shared/errors/Error404Page.tsx":"65","/workspace/algocloud-frontend/src/view/shared/errors/Error500Page.tsx":"66","/workspace/algocloud-frontend/src/view/superadmin/user/UserListPage.tsx":"67","/workspace/algocloud-frontend/src/view/shared/errors/Error403Page.tsx":"68","/workspace/algocloud-frontend/src/view/auth/VerifyEmailPage.tsx":"69","/workspace/algocloud-frontend/src/view/auth/InvitationPage.tsx":"70","/workspace/algocloud-frontend/src/view/auth/PasswordResetPage.tsx":"71","/workspace/algocloud-frontend/src/view/auth/InactiveUserPage.tsx":"72","/workspace/algocloud-frontend/src/view/auth/EmailUnverifiedPage.tsx":"73","/workspace/algocloud-frontend/src/view/auth/EmptyPermissionsPage.tsx":"74","/workspace/algocloud-frontend/src/view/auth/TenantPage.tsx":"75","/workspace/algocloud-frontend/src/view/auth/SignupPage.tsx":"76","/workspace/algocloud-frontend/src/view/auth/ForgotPasswordPage.tsx":"77","/workspace/algocloud-frontend/src/view/auth/SigninPage.tsx":"78","/workspace/algocloud-frontend/src/view/order/importer/OrderImporterPage.tsx":"79","/workspace/algocloud-frontend/src/view/order/view/OrderViewPage.tsx":"80","/workspace/algocloud-frontend/src/view/order/form/OrderFormPage.tsx":"81","/workspace/algocloud-frontend/src/view/order/list/OrderListPage.tsx":"82","/workspace/algocloud-frontend/src/view/product/view/ProductViewPage.tsx":"83","/workspace/algocloud-frontend/src/view/product/importer/ProductImporterPage.tsx":"84","/workspace/algocloud-frontend/src/view/product/list/ProductListPage.tsx":"85","/workspace/algocloud-frontend/src/view/product/form/ProductFormPage.tsx":"86","/workspace/algocloud-frontend/src/view/customer/list/CustomerListPage.tsx":"87","/workspace/algocloud-frontend/src/view/customer/importer/CustomerImporterPage.tsx":"88","/workspace/algocloud-frontend/src/view/customer/view/CustomerViewPage.tsx":"89","/workspace/algocloud-frontend/src/view/customer/form/CustomerFormPage.tsx":"90","/workspace/algocloud-frontend/src/view/dashboard/analytics/App.js":"91","/workspace/algocloud-frontend/src/modules/auth/authActions.tsx":"92","/workspace/algocloud-frontend/src/modules/layout/layoutActions.tsx":"93","/workspace/algocloud-frontend/src/modules/settings/settingsActions.tsx":"94","/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroyReducers.tsx":"95","/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormReducers.tsx":"96","/workspace/algocloud-frontend/src/security/roles.tsx":"97","/workspace/algocloud-frontend/src/security/plans.tsx":"98","/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterReducers.tsx":"99","/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroyReducers.tsx":"100","/workspace/algocloud-frontend/src/modules/customer/view/customerViewReducers.tsx":"101","/workspace/algocloud-frontend/src/modules/customer/list/customerListReducers.tsx":"102","/workspace/algocloud-frontend/src/modules/customer/form/customerFormReducers.tsx":"103","/workspace/algocloud-frontend/src/modules/product/importer/productImporterReducers.tsx":"104","/workspace/algocloud-frontend/src/modules/product/destroy/productDestroyReducers.tsx":"105","/workspace/algocloud-frontend/src/modules/product/view/productViewReducers.tsx":"106","/workspace/algocloud-frontend/src/modules/product/form/productFormReducers.tsx":"107","/workspace/algocloud-frontend/src/modules/auditLog/auditLogActions.tsx":"108","/workspace/algocloud-frontend/src/security/storage.tsx":"109","/workspace/algocloud-frontend/src/components/BackgroundVideo/BackgroundVideo.js":"110","/workspace/algocloud-frontend/src/modules/product/list/productListReducers.tsx":"111","/workspace/algocloud-frontend/src/view/layout/Menu.tsx":"112","/workspace/algocloud-frontend/src/view/layout/Header.tsx":"113","/workspace/algocloud-frontend/src/view/layout/styles/LayoutWrapper.tsx":"114","/workspace/algocloud-frontend/src/view/shared/ButtonIcon.tsx":"115","/workspace/algocloud-frontend/src/view/layout/I18nFlags.tsx":"116","/workspace/algocloud-frontend/src/view/shared/message.tsx":"117","/workspace/algocloud-frontend/src/view/shared/errors/styles/ErrorWrapper.tsx":"118","/workspace/algocloud-frontend/src/view/auth/styles/Wrapper.tsx":"119","/workspace/algocloud-frontend/src/view/auth/styles/SocialButtons.tsx":"120","/workspace/algocloud-frontend/src/view/auth/styles/OtherActions.tsx":"121","/workspace/algocloud-frontend/src/view/auth/styles/Content.tsx":"122","/workspace/algocloud-frontend/src/view/auth/styles/Logo.tsx":"123","/workspace/algocloud-frontend/src/modules/shared/yup/yupFormSchemas.tsx":"124","/workspace/algocloud-frontend/src/view/shared/form/items/InputFormItem.tsx":"125","/workspace/algocloud-frontend/src/view/shared/Spinner.tsx":"126","/workspace/algocloud-frontend/src/view/shared/Breadcrumb.tsx":"127","/workspace/algocloud-frontend/src/view/layout/styles/ContentWrapper.tsx":"128","/workspace/algocloud-frontend/src/view/shared/styles/PageTitle.tsx":"129","/workspace/algocloud-frontend/src/modules/product/form/productFormSelectors.tsx":"130","/workspace/algocloud-frontend/src/modules/product/form/productFormActions.tsx":"131","/workspace/algocloud-frontend/src/view/product/form/ProductForm.tsx":"132","/workspace/algocloud-frontend/src/view/customer/form/CustomerForm.tsx":"133","/workspace/algocloud-frontend/src/modules/customer/form/customerFormSelectors.tsx":"134","/workspace/algocloud-frontend/src/modules/customer/form/customerFormActions.tsx":"135","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AccountLookup.js":"136","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AllTokensPage.js":"137","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/PairPage.js":"138","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AccountPage.js":"139","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AllPairsPage.js":"140","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/TokenPage.js":"141","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/GlobalPage.js":"142","/workspace/algocloud-frontend/src/modules/shared/error/errors.tsx":"143","/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroyActions.tsx":"144","/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormActions.tsx":"145","/workspace/algocloud-frontend/src/modules/customer/list/customerListActions.tsx":"146","/workspace/algocloud-frontend/src/modules/product/view/productViewActions.tsx":"147","/workspace/algocloud-frontend/src/modules/product/destroy/productDestroyActions.tsx":"148","/workspace/algocloud-frontend/src/modules/product/importer/productImporterActions.tsx":"149","/workspace/algocloud-frontend/src/modules/customer/view/customerViewActions.tsx":"150","/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterActions.tsx":"151","/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroyActions.tsx":"152","/workspace/algocloud-frontend/src/modules/auditLog/auditLogExporterFields.tsx":"153","/workspace/algocloud-frontend/src/modules/auditLog/auditLogSelectors.tsx":"154","/workspace/algocloud-frontend/src/modules/auditLog/auditLogService.tsx":"155","/workspace/algocloud-frontend/src/view/menus.tsx":"156","/workspace/algocloud-frontend/src/modules/shared/importer/importerReducers.tsx":"157","/workspace/algocloud-frontend/src/modules/product/list/productListActions.tsx":"158","/workspace/algocloud-frontend/src/view/layout/styles/MenuWrapper.tsx":"159","/workspace/algocloud-frontend/src/modules/shared/exporter/exporter.tsx":"160","/workspace/algocloud-frontend/src/view/shared/Avatar.tsx":"161","/workspace/algocloud-frontend/src/view/layout/styles/HeaderWrapper.tsx":"162","/workspace/algocloud-frontend/src/view/layout/I18nSelect.tsx":"163","/workspace/algocloud-frontend/src/view/layout/styles/I18nFlagsWrapper.tsx":"164","/workspace/algocloud-frontend/src/view/shared/form/formErrors.tsx":"165","/workspace/algocloud-frontend/src/view/dashboard/analytics/Theme/index.js":"166","/workspace/algocloud-frontend/src/view/customer/view/CustomerViewToolbar.tsx":"167","/workspace/algocloud-frontend/src/view/customer/view/CustomerView.tsx":"168","/workspace/algocloud-frontend/src/modules/customer/view/customerViewSelectors.tsx":"169","/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterSelectors.tsx":"170","/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterFields.tsx":"171","/workspace/algocloud-frontend/src/view/shared/form/items/ImagesFormItem.tsx":"172","/workspace/algocloud-frontend/src/view/shared/importer/Importer.tsx":"173","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/LocalLoader/index.js":"174","/workspace/algocloud-frontend/src/view/shared/form/items/TextAreaFormItem.tsx":"175","/workspace/algocloud-frontend/src/view/shared/form/items/DatePickerFormItem.tsx":"176","/workspace/algocloud-frontend/src/modules/customer/customerEnumerators.tsx":"177","/workspace/algocloud-frontend/src/modules/customer/customerService.tsx":"178","/workspace/algocloud-frontend/src/view/shared/styles/FormWrapper.tsx":"179","/workspace/algocloud-frontend/src/view/shared/form/items/RadioFormItem.tsx":"180","/workspace/algocloud-frontend/src/modules/product/productService.tsx":"181","/workspace/algocloud-frontend/src/view/customer/list/CustomerListToolbar.tsx":"182","/workspace/algocloud-frontend/src/view/customer/list/CustomerListFilter.tsx":"183","/workspace/algocloud-frontend/src/view/customer/list/CustomerListTable.tsx":"184","/workspace/algocloud-frontend/src/view/product/list/ProductListToolbar.tsx":"185","/workspace/algocloud-frontend/src/view/product/list/ProductListTable.tsx":"186","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PinnedData/index.js":"187","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/SideNav/index.js":"188","/workspace/algocloud-frontend/src/view/product/list/ProductListFilter.tsx":"189","/workspace/algocloud-frontend/src/modules/tenant/list/tenantListActions.tsx":"190","/workspace/algocloud-frontend/src/modules/customer/list/customerListExporterFields.tsx":"191","/workspace/algocloud-frontend/src/modules/product/importer/productImporterFields.tsx":"192","/workspace/algocloud-frontend/src/modules/shared/exporter/exporterRenders.tsx":"193","/workspace/algocloud-frontend/src/modules/shared/importer/importerActions.tsx":"194","/workspace/algocloud-frontend/src/modules/product/list/productListExporterFields.tsx":"195","/workspace/algocloud-frontend/src/modules/shared/exporter/exporterSchema.tsx":"196","/workspace/algocloud-frontend/src/modules/product/list/productListSelectors.tsx":"197","/workspace/algocloud-frontend/src/modules/shared/importer/importerStatuses.tsx":"198","/workspace/algocloud-frontend/src/modules/shared/excel/excel.tsx":"199","/workspace/algocloud-frontend/src/modules/product/importer/productImporterSelectors.tsx":"200","/workspace/algocloud-frontend/src/modules/customer/list/customerListSelectors.tsx":"201","/workspace/algocloud-frontend/src/view/shared/styles/Toolbar.tsx":"202","/workspace/algocloud-frontend/src/view/shared/styles/ViewWrapper.tsx":"203","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/index.js":"204","/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroySelectors.tsx":"205","/workspace/algocloud-frontend/src/modules/customer/customerSelectors.tsx":"206","/workspace/algocloud-frontend/src/view/shared/view/TextViewItem.tsx":"207","/workspace/algocloud-frontend/src/modules/shared/importer/importerSelectors.tsx":"208","/workspace/algocloud-frontend/src/view/shared/modals/ConfirmModal.tsx":"209","/workspace/algocloud-frontend/src/modules/shared/yup/yupImporterSchemas.tsx":"210","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Link/index.js":"211","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Panel/index.js":"212","/workspace/algocloud-frontend/src/view/shared/uploaders/ImagesUploader.tsx":"213","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/GlobalStats/index.js":"214","/workspace/algocloud-frontend/src/view/shared/importer/ImporterToolbar.tsx":"215","/workspace/algocloud-frontend/src/view/shared/importer/ImporterStatus.tsx":"216","/workspace/algocloud-frontend/src/view/shared/importer/ImporterForm.tsx":"217","/workspace/algocloud-frontend/src/view/shared/importer/ImporterList.tsx":"218","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Search/index.js":"219","/workspace/algocloud-frontend/src/view/shared/form/items/DatePickerRangeFormItem.tsx":"220","/workspace/algocloud-frontend/src/view/shared/styles/TableWrapper.tsx":"221","/workspace/algocloud-frontend/src/view/shared/form/items/InputRangeFormItem.tsx":"222","/workspace/algocloud-frontend/src/view/shared/styles/FilterWrapper.tsx":"223","/workspace/algocloud-frontend/src/view/shared/table/Pagination.tsx":"224","/workspace/algocloud-frontend/src/view/shared/table/ImagesListView.tsx":"225","/workspace/algocloud-frontend/src/modules/shared/yup/yupFilterSchemas.tsx":"226","/workspace/algocloud-frontend/src/modules/shared/filter/filterRenders.tsx":"227","/workspace/algocloud-frontend/src/view/shared/filter/FilterPreview.tsx":"228","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/GlobalChart/index.js":"229","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenList/index.js":"230","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TxnList/index.js":"231","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairList/index.js":"232","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Column/index.js":"233","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Row/index.js":"234","/workspace/algocloud-frontend/src/modules/tenant/list/tenantListSelectors.tsx":"235","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/FormattedName/index.js":"236","/workspace/algocloud-frontend/src/modules/shared/importer/importer.tsx":"237","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Warning/index.js":"238","/workspace/algocloud-frontend/src/view/shared/table/TableColumnHeader.tsx":"239","/workspace/algocloud-frontend/src/modules/product/destroy/productDestroySelectors.tsx":"240","/workspace/algocloud-frontend/src/modules/product/productSelectors.tsx":"241","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Copy/index.js":"242","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenChart/index.js":"243","/workspace/algocloud-frontend/src/view/shared/form/items/SelectFormItem.tsx":"244","/workspace/algocloud-frontend/src/view/dashboard/analytics/hooks/index.ts":"245","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Title/index.js":"246","/workspace/algocloud-frontend/src/view/shared/importer/ImporterRowStatus.tsx":"247","/workspace/algocloud-frontend/src/view/shared/modals/ImageModal.tsx":"248","/workspace/algocloud-frontend/src/view/shared/styles/ImagesUploaderWrapper.tsx":"249","/workspace/algocloud-frontend/src/view/product/view/ProductViewToolbar.tsx":"250","/workspace/algocloud-frontend/src/view/product/view/ProductView.tsx":"251","/workspace/algocloud-frontend/src/modules/product/view/productViewSelectors.tsx":"252","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/ButtonStyled/index.js":"253","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/AccountSearch/index.js":"254","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenLogo/index.js":"255","/workspace/algocloud-frontend/src/modules/shared/fileUpload/fileUploader.tsx":"256","/workspace/algocloud-frontend/src/view/order/list/OrderListTable.tsx":"257","/workspace/algocloud-frontend/src/view/order/list/OrderListToolbar.tsx":"258","/workspace/algocloud-frontend/src/view/shared/table/styles/PaginationWrapper.tsx":"259","/workspace/algocloud-frontend/src/view/order/list/OrderListFilter.tsx":"260","/workspace/algocloud-frontend/src/view/order/form/OrderForm.tsx":"261","/workspace/algocloud-frontend/src/view/order/view/OrderViewToolbar.tsx":"262","/workspace/algocloud-frontend/src/view/order/view/OrderView.tsx":"263","/workspace/algocloud-frontend/src/modules/order/form/orderFormSelectors.tsx":"264","/workspace/algocloud-frontend/src/modules/order/form/orderFormActions.tsx":"265","/workspace/algocloud-frontend/src/modules/order/view/orderViewActions.tsx":"266","/workspace/algocloud-frontend/src/modules/order/view/orderViewSelectors.tsx":"267","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/DoubleLogo/index.js":"268","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PositionList/index.js":"269","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairReturnsChart/index.js":"270","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/UserChart/index.js":"271","/workspace/algocloud-frontend/src/modules/shared/importer/importerSchema.tsx":"272","/workspace/algocloud-frontend/src/modules/order/importer/orderImporterSelectors.tsx":"273","/workspace/algocloud-frontend/src/modules/order/importer/orderImporterFields.tsx":"274","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/UniPrice/index.js":"275","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairChart/index.js":"276","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/LPList/index.js":"277","/workspace/algocloud-frontend/src/modules/order/importer/orderImporterActions.tsx":"278","/workspace/algocloud-frontend/src/view/auth/TenantNewForm.tsx":"279","/workspace/algocloud-frontend/src/view/auth/TenantSelectForm.tsx":"280","/workspace/algocloud-frontend/src/view/superadmin/user/UserTable.tsx":"281","/workspace/algocloud-frontend/src/view/superadmin/user/UserFilter.tsx":"282","/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationSelectors.tsx":"283","/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationActions.tsx":"284","/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListToolbar.tsx":"285","/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListFilter.tsx":"286","/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListTable.tsx":"287","/workspace/algocloud-frontend/src/view/superadmin/tenant/form/TenantForm.tsx":"288","/workspace/algocloud-frontend/src/modules/order/importer/orderImporterReducers.tsx":"289","/workspace/algocloud-frontend/src/view/superadmin/analytics/AnalyticsCard.tsx":"290","/workspace/algocloud-frontend/src/modules/order/view/orderViewReducers.tsx":"291","/workspace/algocloud-frontend/src/modules/order/form/orderFormReducers.tsx":"292","/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsActions.tsx":"293","/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsSelectors.tsx":"294","/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroyReducers.tsx":"295","/workspace/algocloud-frontend/src/modules/order/list/orderListReducers.tsx":"296","/workspace/algocloud-frontend/src/modules/superadmin/tenant/form/tenantFormActions.tsx":"297","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/DropdownSelect/index.js":"298","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TradingviewChart/index.js":"299","/workspace/algocloud-frontend/src/view/shared/view/ImagesViewItem.tsx":"300","/workspace/algocloud-frontend/src/view/shared/importer/styles/ImporterErrorStatusMessage.tsx":"301","/workspace/algocloud-frontend/src/view/product/list/ProductListItem.tsx":"302","/workspace/algocloud-frontend/src/modules/order/list/orderListSelectors.tsx":"303","/workspace/algocloud-frontend/src/modules/order/list/orderListActions.tsx":"304","/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroySelectors.tsx":"305","/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroyActions.tsx":"306","/workspace/algocloud-frontend/src/view/shared/form/items/FilesFormItem.tsx":"307","/workspace/algocloud-frontend/src/view/shared/form/items/SwitchFormItem.tsx":"308","/workspace/algocloud-frontend/src/view/product/view/ProductViewItem.tsx":"309","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/QuestionHelper/index.tsx":"310","/workspace/algocloud-frontend/src/view/customer/autocomplete/CustomerAutocompleteFormItem.tsx":"311","/workspace/algocloud-frontend/src/view/product/autocomplete/ProductAutocompleteFormItem.tsx":"312","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/CandleChart/index.js":"313","/workspace/algocloud-frontend/src/modules/order/orderService.tsx":"314","/workspace/algocloud-frontend/src/view/shared/view/FilesViewItem.tsx":"315","/workspace/algocloud-frontend/src/view/customer/view/CustomerViewItem.tsx":"316","/workspace/algocloud-frontend/src/modules/order/orderSelectors.tsx":"317","/workspace/algocloud-frontend/src/view/user/view/UserViewItem.tsx":"318","/workspace/algocloud-frontend/src/view/user/autocomplete/UserAutocompleteFormItem.tsx":"319","/workspace/algocloud-frontend/src/view/customer/list/CustomerListItem.tsx":"320","/workspace/algocloud-frontend/src/view/shared/table/FileListView.tsx":"321","/workspace/algocloud-frontend/src/view/user/list/UserListItem.tsx":"322","/workspace/algocloud-frontend/src/view/shared/urlfy.tsx":"323","/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormSelectors.tsx":"324","/workspace/algocloud-frontend/src/modules/superadmin/superadminSelectors.tsx":"325","/workspace/algocloud-frontend/src/view/superadmin/user/UserStatusView.tsx":"326","/workspace/algocloud-frontend/src/modules/superadmin/user/userSelectors.tsx":"327","/workspace/algocloud-frontend/src/modules/superadmin/user/userEnumerators.tsx":"328","/workspace/algocloud-frontend/src/modules/superadmin/user/userActions.tsx":"329","/workspace/algocloud-frontend/src/modules/plan/planActions.tsx":"330","/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListActions.tsx":"331","/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListSelectors.tsx":"332","/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroySelectors.tsx":"333","/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroyActions.tsx":"334","/workspace/algocloud-frontend/src/modules/user/importer/userImporterReducers.tsx":"335","/workspace/algocloud-frontend/src/modules/user/form/userFormReducers.tsx":"336","/workspace/algocloud-frontend/src/modules/user/view/userViewReducers.tsx":"337","/workspace/algocloud-frontend/src/modules/user/list/userListReducers.tsx":"338","/workspace/algocloud-frontend/src/modules/superadmin/superadminService.tsx":"339","/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsReducers.tsx":"340","/workspace/algocloud-frontend/src/modules/superadmin/tenant/tenantReducers.tsx":"341","/workspace/algocloud-frontend/src/modules/superadmin/user/userReducers.tsx":"342","/workspace/algocloud-frontend/src/modules/tenant/list/tenantListReducers.tsx":"343","/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationReducers.tsx":"344","/workspace/algocloud-frontend/src/modules/order/list/orderListExporterFields.tsx":"345","/workspace/algocloud-frontend/src/view/shared/uploaders/FilesUploader.tsx":"346","/workspace/algocloud-frontend/src/modules/user/userSelectors.tsx":"347","/workspace/algocloud-frontend/src/view/shared/form/items/AutocompleteInMemoryFormItem.tsx":"348","/workspace/algocloud-frontend/src/modules/user/userService.tsx":"349","/workspace/algocloud-frontend/src/view/user/new/UserNewFormModal.tsx":"350","/workspace/algocloud-frontend/src/modules/plan/planService.tsx":"351","/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroyReducers.tsx":"352","/workspace/algocloud-frontend/src/modules/superadmin/tenant/form/tenantFormReducers.tsx":"353","/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListReducers.tsx":"354","/workspace/algocloud-frontend/src/modules/user/list/userListActions.tsx":"355","/workspace/algocloud-frontend/src/modules/user/view/userViewActions.tsx":"356","/workspace/algocloud-frontend/src/modules/user/form/userFormActions.tsx":"357","/workspace/algocloud-frontend/src/modules/user/importer/userImporterActions.tsx":"358","/workspace/algocloud-frontend/src/view/product/form/ProductFormModal.tsx":"359","/workspace/algocloud-frontend/src/view/customer/form/CustomerFormModal.tsx":"360","/workspace/algocloud-frontend/src/view/user/new/UserNewForm.tsx":"361","/workspace/algocloud-frontend/src/modules/user/list/userListExporterFields.tsx":"362","/workspace/algocloud-frontend/src/modules/user/list/userListSelectors.tsx":"363","/workspace/algocloud-frontend/src/modules/user/importer/userImporterFields.tsx":"364","/workspace/algocloud-frontend/src/modules/user/importer/userImporterSelectors.tsx":"365","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Popover/index.js":"366","/workspace/algocloud-frontend/src/view/user/view/UserViewPage.tsx":"367","/workspace/algocloud-frontend/src/view/user/new/UserNewPage.tsx":"368","/workspace/algocloud-frontend/src/view/user/list/UserPage.tsx":"369","/workspace/algocloud-frontend/src/view/settings/SettingsFormPage.tsx":"370","/workspace/algocloud-frontend/src/view/auditLog/AuditLogPage.tsx":"371","/workspace/algocloud-frontend/src/view/user/edit/UserEditPage.tsx":"372","/workspace/algocloud-frontend/src/view/user/importer/UserImporterPage.tsx":"373","/workspace/algocloud-frontend/src/view/plan/PlanPage.tsx":"374","/workspace/algocloud-frontend/src/view/tenant/list/TenantListPage.tsx":"375","/workspace/algocloud-frontend/src/view/tenant/form/TenantFormPage.tsx":"376","/workspace/algocloud-frontend/src/modules/user/userEnumerators.tsx":"377","/workspace/algocloud-frontend/src/view/shared/form/items/TagsFormItem.tsx":"378","/workspace/algocloud-frontend/src/view/auth/PasswordChangeFormPage.tsx":"379","/workspace/algocloud-frontend/src/view/auth/ProfileFormPage.tsx":"380","/workspace/algocloud-frontend/src/view/user/view/UserView.tsx":"381","/workspace/algocloud-frontend/src/modules/user/view/userViewSelectors.tsx":"382","/workspace/algocloud-frontend/src/view/user/view/UserViewToolbar.tsx":"383","/workspace/algocloud-frontend/src/modules/user/form/userFormSelectors.tsx":"384","/workspace/algocloud-frontend/src/view/user/list/UserTable.tsx":"385","/workspace/algocloud-frontend/src/view/user/list/UserFilter.tsx":"386","/workspace/algocloud-frontend/src/view/user/list/UserToolbar.tsx":"387","/workspace/algocloud-frontend/src/view/settings/SettingsFormToolbar.tsx":"388","/workspace/algocloud-frontend/src/view/settings/SettingsForm.tsx":"389","/workspace/algocloud-frontend/src/modules/settings/settingsSelectors.tsx":"390","/workspace/algocloud-frontend/src/view/auditLog/AuditLogFilter.tsx":"391","/workspace/algocloud-frontend/src/view/auditLog/AuditLogTable.tsx":"392","/workspace/algocloud-frontend/src/view/auditLog/AuditLogToolbar.tsx":"393","/workspace/algocloud-frontend/src/view/user/edit/UserEditForm.tsx":"394","/workspace/algocloud-frontend/src/view/plan/PlanCardFree.tsx":"395","/workspace/algocloud-frontend/src/view/plan/PlanCardPaid.tsx":"396","/workspace/algocloud-frontend/src/view/tenant/list/TenantListFilter.tsx":"397","/workspace/algocloud-frontend/src/view/tenant/list/TenantListTable.tsx":"398","/workspace/algocloud-frontend/src/view/tenant/list/TenantListToolbar.tsx":"399","/workspace/algocloud-frontend/src/view/tenant/form/TenantForm.tsx":"400","/workspace/algocloud-frontend/src/view/auth/PasswordChangeForm.tsx":"401","/workspace/algocloud-frontend/src/view/auth/ProfileForm.tsx":"402","/workspace/algocloud-frontend/src/view/user/view/UserStatusView.tsx":"403","/workspace/algocloud-frontend/src/view/shared/view/CustomViewItem.tsx":"404","/workspace/algocloud-frontend/src/modules/settings/settingsEnumerators.tsx":"405","/workspace/algocloud-frontend/src/modules/plan/planSelectors.tsx":"406","/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroySelectors.tsx":"407","/workspace/algocloud-frontend/src/view/plan/styles/PlanCardWrapper.tsx":"408","/workspace/algocloud-frontend/src/modules/tenant/tenantSelectors.tsx":"409"},{"size":813,"mtime":1637018719273,"results":"410","hashOfConfig":"411"},{"size":1893,"mtime":1637021526619,"results":"412","hashOfConfig":"411"},{"size":704,"mtime":1637018719277,"results":"413","hashOfConfig":"411"},{"size":3536,"mtime":1637018719277,"results":"414","hashOfConfig":"411"},{"size":1506,"mtime":1637018719285,"results":"415","hashOfConfig":"411"},{"size":2927,"mtime":1637018719293,"results":"416","hashOfConfig":"411"},{"size":3754,"mtime":1637018719273,"results":"417","hashOfConfig":"411"},{"size":4686,"mtime":1637018719313,"results":"418","hashOfConfig":"411"},{"size":19233,"mtime":1637018719313,"results":"419","hashOfConfig":"411"},{"size":13562,"mtime":1637018719313,"results":"420","hashOfConfig":"411"},{"size":20557,"mtime":1637018719313,"results":"421","hashOfConfig":"411"},{"size":7245,"mtime":1637018719313,"results":"422","hashOfConfig":"411"},{"size":16816,"mtime":1637018719313,"results":"423","hashOfConfig":"411"},{"size":931,"mtime":1637018719285,"results":"424","hashOfConfig":"411"},{"size":1648,"mtime":1637018719293,"results":"425","hashOfConfig":"411"},{"size":361,"mtime":1637018719277,"results":"426","hashOfConfig":"411"},{"size":1787,"mtime":1637018719273,"results":"427","hashOfConfig":"411"},{"size":4358,"mtime":1637018719325,"results":"428","hashOfConfig":"411"},{"size":1009,"mtime":1637018719285,"results":"429","hashOfConfig":"411"},{"size":16052,"mtime":1637018719301,"results":"430","hashOfConfig":"411"},{"size":724,"mtime":1637018719301,"results":"431","hashOfConfig":"411"},{"size":11319,"mtime":1637018719313,"results":"432","hashOfConfig":"411"},{"size":2161,"mtime":1637018719313,"results":"433","hashOfConfig":"411"},{"size":19614,"mtime":1637018719273,"results":"434","hashOfConfig":"411"},{"size":18269,"mtime":1637018719273,"results":"435","hashOfConfig":"411"},{"size":17568,"mtime":1637018719273,"results":"436","hashOfConfig":"411"},{"size":99,"mtime":1637018719277,"results":"437","hashOfConfig":"411"},{"size":952,"mtime":1637018719285,"results":"438","hashOfConfig":"411"},{"size":102,"mtime":1637018719273,"results":"439","hashOfConfig":"411"},{"size":5610,"mtime":1637018719277,"results":"440","hashOfConfig":"411"},{"size":842,"mtime":1637018719325,"results":"441","hashOfConfig":"411"},{"size":1396,"mtime":1637018719325,"results":"442","hashOfConfig":"411"},{"size":954,"mtime":1637018719325,"results":"443","hashOfConfig":"411"},{"size":329,"mtime":1637018719321,"results":"444","hashOfConfig":"411"},{"size":615,"mtime":1637018719325,"results":"445","hashOfConfig":"411"},{"size":244,"mtime":1637018719321,"results":"446","hashOfConfig":"411"},{"size":1054,"mtime":1637018719325,"results":"447","hashOfConfig":"411"},{"size":7617,"mtime":1637021938781,"results":"448","hashOfConfig":"411"},{"size":1971,"mtime":1637018719325,"results":"449","hashOfConfig":"411"},{"size":848,"mtime":1637018719325,"results":"450","hashOfConfig":"411"},{"size":508,"mtime":1637018719277,"results":"451","hashOfConfig":"411"},{"size":14193,"mtime":1637018719313,"results":"452","hashOfConfig":"411"},{"size":932,"mtime":1637018719313,"results":"453","hashOfConfig":"411"},{"size":120,"mtime":1637018719277,"results":"454","hashOfConfig":"411"},{"size":4163,"mtime":1637018719277,"results":"455","hashOfConfig":"411"},{"size":600,"mtime":1637018719277,"results":"456","hashOfConfig":"411"},{"size":399,"mtime":1637018719289,"results":"457","hashOfConfig":"411"},{"size":931,"mtime":1637018719285,"results":"458","hashOfConfig":"411"},{"size":1140,"mtime":1637018719273,"results":"459","hashOfConfig":"411"},{"size":314,"mtime":1637018719285,"results":"460","hashOfConfig":"411"},{"size":801,"mtime":1637018719281,"results":"461","hashOfConfig":"411"},{"size":387,"mtime":1637018719293,"results":"462","hashOfConfig":"411"},{"size":476,"mtime":1637018719281,"results":"463","hashOfConfig":"411"},{"size":1770,"mtime":1637018719273,"results":"464","hashOfConfig":"411"},{"size":496,"mtime":1637018719285,"results":"465","hashOfConfig":"411"},{"size":506,"mtime":1637018719277,"results":"466","hashOfConfig":"411"},{"size":3612,"mtime":1637018719277,"results":"467","hashOfConfig":"411"},{"size":271,"mtime":1637018719321,"results":"468","hashOfConfig":"411"},{"size":4199,"mtime":1637018719301,"results":"469","hashOfConfig":"411"},{"size":520,"mtime":1637018719313,"results":"470","hashOfConfig":"411"},{"size":7371,"mtime":1637018719293,"results":"471","hashOfConfig":"411"},{"size":1794,"mtime":1637018719329,"results":"472","hashOfConfig":"411"},{"size":1317,"mtime":1637018719329,"results":"473","hashOfConfig":"411"},{"size":910,"mtime":1637018719329,"results":"474","hashOfConfig":"411"},{"size":947,"mtime":1637018719321,"results":"475","hashOfConfig":"411"},{"size":947,"mtime":1637018719321,"results":"476","hashOfConfig":"411"},{"size":713,"mtime":1637018719333,"results":"477","hashOfConfig":"411"},{"size":947,"mtime":1637018719321,"results":"478","hashOfConfig":"411"},{"size":2890,"mtime":1637018719297,"results":"479","hashOfConfig":"411"},{"size":2945,"mtime":1637018719297,"results":"480","hashOfConfig":"411"},{"size":3039,"mtime":1637018719297,"results":"481","hashOfConfig":"411"},{"size":1609,"mtime":1637018719297,"results":"482","hashOfConfig":"411"},{"size":2215,"mtime":1637018719293,"results":"483","hashOfConfig":"411"},{"size":1528,"mtime":1637018719293,"results":"484","hashOfConfig":"411"},{"size":2087,"mtime":1637018719297,"results":"485","hashOfConfig":"411"},{"size":3583,"mtime":1637018719297,"results":"486","hashOfConfig":"411"},{"size":3021,"mtime":1637018719293,"results":"487","hashOfConfig":"411"},{"size":6845,"mtime":1637018719297,"results":"488","hashOfConfig":"411"},{"size":1090,"mtime":1637018719317,"results":"489","hashOfConfig":"411"},{"size":1410,"mtime":1637018719317,"results":"490","hashOfConfig":"411"},{"size":2122,"mtime":1637018719317,"results":"491","hashOfConfig":"411"},{"size":894,"mtime":1637018719317,"results":"492","hashOfConfig":"411"},{"size":1446,"mtime":1637018719321,"results":"493","hashOfConfig":"411"},{"size":1116,"mtime":1637018719317,"results":"494","hashOfConfig":"411"},{"size":926,"mtime":1637018719317,"results":"495","hashOfConfig":"411"},{"size":2152,"mtime":1637018719317,"results":"496","hashOfConfig":"411"},{"size":942,"mtime":1637018719297,"results":"497","hashOfConfig":"411"},{"size":1129,"mtime":1637018719297,"results":"498","hashOfConfig":"411"},{"size":1464,"mtime":1637018719297,"results":"499","hashOfConfig":"411"},{"size":2167,"mtime":1637018719297,"results":"500","hashOfConfig":"411"},{"size":9673,"mtime":1637018719301,"results":"501","hashOfConfig":"411"},{"size":9009,"mtime":1637018719273,"results":"502","hashOfConfig":"411"},{"size":704,"mtime":1637018719277,"results":"503","hashOfConfig":"411"},{"size":2060,"mtime":1637018719285,"results":"504","hashOfConfig":"411"},{"size":508,"mtime":1637018719289,"results":"505","hashOfConfig":"411"},{"size":1252,"mtime":1637018719289,"results":"506","hashOfConfig":"411"},{"size":505,"mtime":1637018719293,"results":"507","hashOfConfig":"411"},{"size":188,"mtime":1637018719293,"results":"508","hashOfConfig":"411"},{"size":197,"mtime":1637018719277,"results":"509","hashOfConfig":"411"},{"size":837,"mtime":1637018719277,"results":"510","hashOfConfig":"411"},{"size":576,"mtime":1637018719277,"results":"511","hashOfConfig":"411"},{"size":2576,"mtime":1637018719277,"results":"512","hashOfConfig":"411"},{"size":1256,"mtime":1637018719277,"results":"513","hashOfConfig":"411"},{"size":195,"mtime":1637018719281,"results":"514","hashOfConfig":"411"},{"size":835,"mtime":1637018719281,"results":"515","hashOfConfig":"411"},{"size":574,"mtime":1637018719285,"results":"516","hashOfConfig":"411"},{"size":1254,"mtime":1637018719281,"results":"517","hashOfConfig":"411"},{"size":3259,"mtime":1637018719273,"results":"518","hashOfConfig":"411"},{"size":1393,"mtime":1637018719293,"results":"519","hashOfConfig":"411"},{"size":936,"mtime":1637018719273,"results":"520","hashOfConfig":"411"},{"size":2574,"mtime":1637018719281,"results":"521","hashOfConfig":"411"},{"size":4223,"mtime":1637018719313,"results":"522","hashOfConfig":"411"},{"size":4673,"mtime":1637018719313,"results":"523","hashOfConfig":"411"},{"size":728,"mtime":1637018719313,"results":"524","hashOfConfig":"411"},{"size":257,"mtime":1637018719321,"results":"525","hashOfConfig":"411"},{"size":660,"mtime":1637018719313,"results":"526","hashOfConfig":"411"},{"size":567,"mtime":1637018719325,"results":"527","hashOfConfig":"411"},{"size":1602,"mtime":1637018719321,"results":"528","hashOfConfig":"411"},{"size":450,"mtime":1637018719297,"results":"529","hashOfConfig":"411"},{"size":273,"mtime":1637018719297,"results":"530","hashOfConfig":"411"},{"size":149,"mtime":1637018719297,"results":"531","hashOfConfig":"411"},{"size":653,"mtime":1637018719297,"results":"532","hashOfConfig":"411"},{"size":290,"mtime":1637018719297,"results":"533","hashOfConfig":"411"},{"size":6548,"mtime":1637018719285,"results":"534","hashOfConfig":"411"},{"size":2514,"mtime":1637018719321,"results":"535","hashOfConfig":"411"},{"size":401,"mtime":1637018719321,"results":"536","hashOfConfig":"411"},{"size":968,"mtime":1637018719321,"results":"537","hashOfConfig":"411"},{"size":252,"mtime":1637018719313,"results":"538","hashOfConfig":"411"},{"size":123,"mtime":1637018719329,"results":"539","hashOfConfig":"411"},{"size":511,"mtime":1637018719281,"results":"540","hashOfConfig":"411"},{"size":2311,"mtime":1637018719281,"results":"541","hashOfConfig":"411"},{"size":4352,"mtime":1637018719317,"results":"542","hashOfConfig":"411"},{"size":4203,"mtime":1637018719297,"results":"543","hashOfConfig":"411"},{"size":514,"mtime":1637018719277,"results":"544","hashOfConfig":"411"},{"size":2334,"mtime":1637018719277,"results":"545","hashOfConfig":"411"},{"size":1500,"mtime":1637018719313,"results":"546","hashOfConfig":"411"},{"size":1033,"mtime":1637018719313,"results":"547","hashOfConfig":"411"},{"size":19121,"mtime":1637018719313,"results":"548","hashOfConfig":"411"},{"size":11814,"mtime":1637018719313,"results":"549","hashOfConfig":"411"},{"size":1018,"mtime":1637018719313,"results":"550","hashOfConfig":"411"},{"size":14207,"mtime":1637018719313,"results":"551","hashOfConfig":"411"},{"size":5704,"mtime":1637018719313,"results":"552","hashOfConfig":"411"},{"size":1659,"mtime":1637018719285,"results":"553","hashOfConfig":"411"},{"size":1276,"mtime":1637018719289,"results":"554","hashOfConfig":"411"},{"size":2338,"mtime":1637018719289,"results":"555","hashOfConfig":"411"},{"size":3856,"mtime":1637018719277,"results":"556","hashOfConfig":"411"},{"size":840,"mtime":1637018719285,"results":"557","hashOfConfig":"411"},{"size":2094,"mtime":1637018719281,"results":"558","hashOfConfig":"411"},{"size":532,"mtime":1637018719281,"results":"559","hashOfConfig":"411"},{"size":851,"mtime":1637018719277,"results":"560","hashOfConfig":"411"},{"size":544,"mtime":1637018719277,"results":"561","hashOfConfig":"411"},{"size":2114,"mtime":1637018719277,"results":"562","hashOfConfig":"411"},{"size":735,"mtime":1637018719273,"results":"563","hashOfConfig":"411"},{"size":2698,"mtime":1637018719273,"results":"564","hashOfConfig":"411"},{"size":515,"mtime":1637018719273,"results":"565","hashOfConfig":"411"},{"size":1879,"mtime":1637018719317,"results":"566","hashOfConfig":"411"},{"size":2387,"mtime":1637018719285,"results":"567","hashOfConfig":"411"},{"size":3827,"mtime":1637018719281,"results":"568","hashOfConfig":"411"},{"size":1302,"mtime":1637018719317,"results":"569","hashOfConfig":"411"},{"size":864,"mtime":1637018719285,"results":"570","hashOfConfig":"411"},{"size":1479,"mtime":1637018719321,"results":"571","hashOfConfig":"411"},{"size":1429,"mtime":1637018719313,"results":"572","hashOfConfig":"411"},{"size":707,"mtime":1637018719313,"results":"573","hashOfConfig":"411"},{"size":274,"mtime":1637018719313,"results":"574","hashOfConfig":"411"},{"size":452,"mtime":1637018719321,"results":"575","hashOfConfig":"411"},{"size":5324,"mtime":1637018719301,"results":"576","hashOfConfig":"411"},{"size":2901,"mtime":1637018719301,"results":"577","hashOfConfig":"411"},{"size":912,"mtime":1637018719297,"results":"578","hashOfConfig":"411"},{"size":381,"mtime":1637018719277,"results":"579","hashOfConfig":"411"},{"size":202,"mtime":1637018719277,"results":"580","hashOfConfig":"411"},{"size":968,"mtime":1637018719277,"results":"581","hashOfConfig":"411"},{"size":1840,"mtime":1637018719321,"results":"582","hashOfConfig":"411"},{"size":1001,"mtime":1637018719325,"results":"583","hashOfConfig":"411"},{"size":833,"mtime":1637018719309,"results":"584","hashOfConfig":"411"},{"size":2236,"mtime":1637018719325,"results":"585","hashOfConfig":"411"},{"size":2581,"mtime":1637018719321,"results":"586","hashOfConfig":"411"},{"size":113,"mtime":1637018719277,"results":"587","hashOfConfig":"411"},{"size":2105,"mtime":1637018719277,"results":"588","hashOfConfig":"411"},{"size":560,"mtime":1637018719325,"results":"589","hashOfConfig":"411"},{"size":2439,"mtime":1637018719325,"results":"590","hashOfConfig":"411"},{"size":2097,"mtime":1637018719285,"results":"591","hashOfConfig":"411"},{"size":5020,"mtime":1637018719297,"results":"592","hashOfConfig":"411"},{"size":5626,"mtime":1637018719297,"results":"593","hashOfConfig":"411"},{"size":7902,"mtime":1637018719297,"results":"594","hashOfConfig":"411"},{"size":4997,"mtime":1637018719317,"results":"595","hashOfConfig":"411"},{"size":7885,"mtime":1637018719317,"results":"596","hashOfConfig":"411"},{"size":4960,"mtime":1637018719309,"results":"597","hashOfConfig":"411"},{"size":6361,"mtime":1637018719309,"results":"598","hashOfConfig":"411"},{"size":4605,"mtime":1637018719317,"results":"599","hashOfConfig":"411"},{"size":2670,"mtime":1637018719289,"results":"600","hashOfConfig":"411"},{"size":701,"mtime":1637018719277,"results":"601","hashOfConfig":"411"},{"size":1038,"mtime":1637018719281,"results":"602","hashOfConfig":"411"},{"size":779,"mtime":1637018719285,"results":"603","hashOfConfig":"411"},{"size":4556,"mtime":1637018719285,"results":"604","hashOfConfig":"411"},{"size":870,"mtime":1637018719281,"results":"605","hashOfConfig":"411"},{"size":768,"mtime":1637018719285,"results":"606","hashOfConfig":"411"},{"size":2413,"mtime":1637018719281,"results":"607","hashOfConfig":"411"},{"size":84,"mtime":1637018719285,"results":"608","hashOfConfig":"411"},{"size":880,"mtime":1637018719285,"results":"609","hashOfConfig":"411"},{"size":199,"mtime":1637018719281,"results":"610","hashOfConfig":"411"},{"size":2416,"mtime":1637018719277,"results":"611","hashOfConfig":"411"},{"size":180,"mtime":1637018719329,"results":"612","hashOfConfig":"411"},{"size":148,"mtime":1637018719329,"results":"613","hashOfConfig":"411"},{"size":3552,"mtime":1637018719313,"results":"614","hashOfConfig":"411"},{"size":282,"mtime":1637018719277,"results":"615","hashOfConfig":"411"},{"size":1826,"mtime":1637018719277,"results":"616","hashOfConfig":"411"},{"size":690,"mtime":1637018719329,"results":"617","hashOfConfig":"411"},{"size":3194,"mtime":1637018719285,"results":"618","hashOfConfig":"411"},{"size":1572,"mtime":1637018719325,"results":"619","hashOfConfig":"411"},{"size":7459,"mtime":1637018719285,"results":"620","hashOfConfig":"411"},{"size":1298,"mtime":1637018719309,"results":"621","hashOfConfig":"411"},{"size":2129,"mtime":1637018719309,"results":"622","hashOfConfig":"411"},{"size":4328,"mtime":1637018719329,"results":"623","hashOfConfig":"411"},{"size":2258,"mtime":1637018719305,"results":"624","hashOfConfig":"411"},{"size":4519,"mtime":1637018719325,"results":"625","hashOfConfig":"411"},{"size":2280,"mtime":1637018719325,"results":"626","hashOfConfig":"411"},{"size":1350,"mtime":1637018719325,"results":"627","hashOfConfig":"411"},{"size":3950,"mtime":1637018719325,"results":"628","hashOfConfig":"411"},{"size":16009,"mtime":1637018719309,"results":"629","hashOfConfig":"411"},{"size":4781,"mtime":1637018719321,"results":"630","hashOfConfig":"411"},{"size":636,"mtime":1637018719329,"results":"631","hashOfConfig":"411"},{"size":4011,"mtime":1637018719321,"results":"632","hashOfConfig":"411"},{"size":951,"mtime":1637018719325,"results":"633","hashOfConfig":"411"},{"size":1733,"mtime":1637018719329,"results":"634","hashOfConfig":"411"},{"size":681,"mtime":1637018719329,"results":"635","hashOfConfig":"411"},{"size":4072,"mtime":1637018719285,"results":"636","hashOfConfig":"411"},{"size":3516,"mtime":1637018719285,"results":"637","hashOfConfig":"411"},{"size":2284,"mtime":1637018719321,"results":"638","hashOfConfig":"411"},{"size":4516,"mtime":1637018719305,"results":"639","hashOfConfig":"411"},{"size":9419,"mtime":1637018719309,"results":"640","hashOfConfig":"411"},{"size":13744,"mtime":1637018719309,"results":"641","hashOfConfig":"411"},{"size":9832,"mtime":1637018719309,"results":"642","hashOfConfig":"411"},{"size":509,"mtime":1637018719305,"results":"643","hashOfConfig":"411"},{"size":828,"mtime":1637018719309,"results":"644","hashOfConfig":"411"},{"size":2294,"mtime":1637018719289,"results":"645","hashOfConfig":"411"},{"size":1351,"mtime":1637018719305,"results":"646","hashOfConfig":"411"},{"size":1904,"mtime":1637018719285,"results":"647","hashOfConfig":"411"},{"size":3831,"mtime":1637018719313,"results":"648","hashOfConfig":"411"},{"size":1519,"mtime":1637018719329,"results":"649","hashOfConfig":"411"},{"size":279,"mtime":1637018719281,"results":"650","hashOfConfig":"411"},{"size":1819,"mtime":1637018719285,"results":"651","hashOfConfig":"411"},{"size":1105,"mtime":1637018719305,"results":"652","hashOfConfig":"411"},{"size":14289,"mtime":1637018719309,"results":"653","hashOfConfig":"411"},{"size":4155,"mtime":1637018719325,"results":"654","hashOfConfig":"411"},{"size":2500,"mtime":1637018719313,"results":"655","hashOfConfig":"411"},{"size":924,"mtime":1637018719309,"results":"656","hashOfConfig":"411"},{"size":1099,"mtime":1637018719325,"results":"657","hashOfConfig":"411"},{"size":2193,"mtime":1637018719325,"results":"658","hashOfConfig":"411"},{"size":399,"mtime":1637018719325,"results":"659","hashOfConfig":"411"},{"size":2889,"mtime":1637018719321,"results":"660","hashOfConfig":"411"},{"size":1029,"mtime":1637018719317,"results":"661","hashOfConfig":"411"},{"size":378,"mtime":1637018719285,"results":"662","hashOfConfig":"411"},{"size":3902,"mtime":1637018719305,"results":"663","hashOfConfig":"411"},{"size":4844,"mtime":1637018719305,"results":"664","hashOfConfig":"411"},{"size":1807,"mtime":1637018719309,"results":"665","hashOfConfig":"411"},{"size":2881,"mtime":1637018719285,"results":"666","hashOfConfig":"411"},{"size":8027,"mtime":1637018719317,"results":"667","hashOfConfig":"411"},{"size":4951,"mtime":1637018719317,"results":"668","hashOfConfig":"411"},{"size":8580,"mtime":1637018719329,"results":"669","hashOfConfig":"411"},{"size":4664,"mtime":1637018719317,"results":"670","hashOfConfig":"411"},{"size":5073,"mtime":1637018719317,"results":"671","hashOfConfig":"411"},{"size":2865,"mtime":1637018719317,"results":"672","hashOfConfig":"411"},{"size":1408,"mtime":1637018719317,"results":"673","hashOfConfig":"411"},{"size":505,"mtime":1637018719281,"results":"674","hashOfConfig":"411"},{"size":2265,"mtime":1637018719281,"results":"675","hashOfConfig":"411"},{"size":818,"mtime":1637018719281,"results":"676","hashOfConfig":"411"},{"size":372,"mtime":1637018719281,"results":"677","hashOfConfig":"411"},{"size":944,"mtime":1637018719305,"results":"678","hashOfConfig":"411"},{"size":11416,"mtime":1637018719309,"results":"679","hashOfConfig":"411"},{"size":5216,"mtime":1637018719309,"results":"680","hashOfConfig":"411"},{"size":4754,"mtime":1637018719309,"results":"681","hashOfConfig":"411"},{"size":1303,"mtime":1637018719285,"results":"682","hashOfConfig":"411"},{"size":193,"mtime":1637018719281,"results":"683","hashOfConfig":"411"},{"size":1123,"mtime":1637018719281,"results":"684","hashOfConfig":"411"},{"size":2387,"mtime":1637018719309,"results":"685","hashOfConfig":"411"},{"size":11228,"mtime":1637018719309,"results":"686","hashOfConfig":"411"},{"size":5252,"mtime":1637018719309,"results":"687","hashOfConfig":"411"},{"size":508,"mtime":1637018719281,"results":"688","hashOfConfig":"411"},{"size":3057,"mtime":1637018719297,"results":"689","hashOfConfig":"411"},{"size":2331,"mtime":1637018719297,"results":"690","hashOfConfig":"411"},{"size":4708,"mtime":1637018719333,"results":"691","hashOfConfig":"411"},{"size":5162,"mtime":1637018719329,"results":"692","hashOfConfig":"411"},{"size":417,"mtime":1637018719289,"results":"693","hashOfConfig":"411"},{"size":3569,"mtime":1637018719289,"results":"694","hashOfConfig":"411"},{"size":568,"mtime":1637018719329,"results":"695","hashOfConfig":"411"},{"size":348,"mtime":1637018719329,"results":"696","hashOfConfig":"411"},{"size":6245,"mtime":1637018719329,"results":"697","hashOfConfig":"411"},{"size":4097,"mtime":1637018719329,"results":"698","hashOfConfig":"411"},{"size":191,"mtime":1637018719281,"results":"699","hashOfConfig":"411"},{"size":1451,"mtime":1637018719329,"results":"700","hashOfConfig":"411"},{"size":570,"mtime":1637018719281,"results":"701","hashOfConfig":"411"},{"size":1250,"mtime":1637018719281,"results":"702","hashOfConfig":"411"},{"size":882,"mtime":1637018719285,"results":"703","hashOfConfig":"411"},{"size":504,"mtime":1637018719285,"results":"704","hashOfConfig":"411"},{"size":831,"mtime":1637018719277,"results":"705","hashOfConfig":"411"},{"size":2570,"mtime":1637018719281,"results":"706","hashOfConfig":"411"},{"size":894,"mtime":1637018719289,"results":"707","hashOfConfig":"411"},{"size":2208,"mtime":1637018719305,"results":"708","hashOfConfig":"411"},{"size":7310,"mtime":1637018719309,"results":"709","hashOfConfig":"411"},{"size":736,"mtime":1637018719329,"results":"710","hashOfConfig":"411"},{"size":215,"mtime":1637018719325,"results":"711","hashOfConfig":"411"},{"size":1136,"mtime":1637018719317,"results":"712","hashOfConfig":"411"},{"size":2407,"mtime":1637018719281,"results":"713","hashOfConfig":"411"},{"size":3769,"mtime":1637018719281,"results":"714","hashOfConfig":"411"},{"size":273,"mtime":1637018719281,"results":"715","hashOfConfig":"411"},{"size":2054,"mtime":1637018719277,"results":"716","hashOfConfig":"411"},{"size":1898,"mtime":1637018719321,"results":"717","hashOfConfig":"411"},{"size":1831,"mtime":1637018719325,"results":"718","hashOfConfig":"411"},{"size":1279,"mtime":1637018719321,"results":"719","hashOfConfig":"411"},{"size":1605,"mtime":1637018719309,"results":"720","hashOfConfig":"411"},{"size":2254,"mtime":1637018719297,"results":"721","hashOfConfig":"411"},{"size":2242,"mtime":1637018719317,"results":"722","hashOfConfig":"411"},{"size":5890,"mtime":1637018719305,"results":"723","hashOfConfig":"411"},{"size":2081,"mtime":1637018719281,"results":"724","hashOfConfig":"411"},{"size":730,"mtime":1637018719329,"results":"725","hashOfConfig":"411"},{"size":1285,"mtime":1637018719297,"results":"726","hashOfConfig":"411"},{"size":1805,"mtime":1637018719281,"results":"727","hashOfConfig":"411"},{"size":1459,"mtime":1637018719333,"results":"728","hashOfConfig":"411"},{"size":2338,"mtime":1637018719333,"results":"729","hashOfConfig":"411"},{"size":1142,"mtime":1637018719297,"results":"730","hashOfConfig":"411"},{"size":837,"mtime":1637018719329,"results":"731","hashOfConfig":"411"},{"size":1315,"mtime":1637018719333,"results":"732","hashOfConfig":"411"},{"size":334,"mtime":1637018719329,"results":"733","hashOfConfig":"411"},{"size":508,"mtime":1637018719289,"results":"734","hashOfConfig":"411"},{"size":826,"mtime":1637018719285,"results":"735","hashOfConfig":"411"},{"size":421,"mtime":1637018719333,"results":"736","hashOfConfig":"411"},{"size":1766,"mtime":1637018719289,"results":"737","hashOfConfig":"411"},{"size":91,"mtime":1637018719289,"results":"738","hashOfConfig":"411"},{"size":2692,"mtime":1637018719289,"results":"739","hashOfConfig":"411"},{"size":1613,"mtime":1637018719281,"results":"740","hashOfConfig":"411"},{"size":3104,"mtime":1637018719289,"results":"741","hashOfConfig":"411"},{"size":1786,"mtime":1637018719289,"results":"742","hashOfConfig":"411"},{"size":286,"mtime":1637018719289,"results":"743","hashOfConfig":"411"},{"size":1119,"mtime":1637018719289,"results":"744","hashOfConfig":"411"},{"size":189,"mtime":1637018719293,"results":"745","hashOfConfig":"411"},{"size":1231,"mtime":1637018719293,"results":"746","hashOfConfig":"411"},{"size":560,"mtime":1637018719293,"results":"747","hashOfConfig":"411"},{"size":3238,"mtime":1637018719293,"results":"748","hashOfConfig":"411"},{"size":1533,"mtime":1637018719289,"results":"749","hashOfConfig":"411"},{"size":659,"mtime":1637018719285,"results":"750","hashOfConfig":"411"},{"size":337,"mtime":1637018719289,"results":"751","hashOfConfig":"411"},{"size":1734,"mtime":1637018719289,"results":"752","hashOfConfig":"411"},{"size":2248,"mtime":1637018719289,"results":"753","hashOfConfig":"411"},{"size":1415,"mtime":1637018719289,"results":"754","hashOfConfig":"411"},{"size":1085,"mtime":1637018719281,"results":"755","hashOfConfig":"411"},{"size":3494,"mtime":1637018719329,"results":"756","hashOfConfig":"411"},{"size":1798,"mtime":1637018719293,"results":"757","hashOfConfig":"411"},{"size":6099,"mtime":1637018719321,"results":"758","hashOfConfig":"411"},{"size":2078,"mtime":1637018719293,"results":"759","hashOfConfig":"411"},{"size":2112,"mtime":1637018719333,"results":"760","hashOfConfig":"411"},{"size":639,"mtime":1637018719281,"results":"761","hashOfConfig":"411"},{"size":519,"mtime":1637018719289,"results":"762","hashOfConfig":"411"},{"size":518,"mtime":1637018719289,"results":"763","hashOfConfig":"411"},{"size":1783,"mtime":1637018719289,"results":"764","hashOfConfig":"411"},{"size":5484,"mtime":1637018719293,"results":"765","hashOfConfig":"411"},{"size":803,"mtime":1637018719293,"results":"766","hashOfConfig":"411"},{"size":2465,"mtime":1637018719293,"results":"767","hashOfConfig":"411"},{"size":487,"mtime":1637018719293,"results":"768","hashOfConfig":"411"},{"size":2028,"mtime":1637018719317,"results":"769","hashOfConfig":"411"},{"size":2040,"mtime":1637018719297,"results":"770","hashOfConfig":"411"},{"size":4492,"mtime":1637018719333,"results":"771","hashOfConfig":"411"},{"size":743,"mtime":1637018719293,"results":"772","hashOfConfig":"411"},{"size":2403,"mtime":1637018719293,"results":"773","hashOfConfig":"411"},{"size":365,"mtime":1637018719293,"results":"774","hashOfConfig":"411"},{"size":185,"mtime":1637018719293,"results":"775","hashOfConfig":"411"},{"size":2801,"mtime":1637018719309,"results":"776","hashOfConfig":"411"},{"size":1350,"mtime":1637018719333,"results":"777","hashOfConfig":"411"},{"size":1319,"mtime":1637018719333,"results":"778","hashOfConfig":"411"},{"size":786,"mtime":1637018719333,"results":"779","hashOfConfig":"411"},{"size":1532,"mtime":1637018719321,"results":"780","hashOfConfig":"411"},{"size":839,"mtime":1637018719293,"results":"781","hashOfConfig":"411"},{"size":1721,"mtime":1637018719333,"results":"782","hashOfConfig":"411"},{"size":1013,"mtime":1637018719333,"results":"783","hashOfConfig":"411"},{"size":1104,"mtime":1637018719317,"results":"784","hashOfConfig":"411"},{"size":1029,"mtime":1637018719333,"results":"785","hashOfConfig":"411"},{"size":2230,"mtime":1637018719333,"results":"786","hashOfConfig":"411"},{"size":193,"mtime":1637018719293,"results":"787","hashOfConfig":"411"},{"size":3020,"mtime":1637018719325,"results":"788","hashOfConfig":"411"},{"size":837,"mtime":1637018719297,"results":"789","hashOfConfig":"411"},{"size":763,"mtime":1637018719297,"results":"790","hashOfConfig":"411"},{"size":1661,"mtime":1637018719333,"results":"791","hashOfConfig":"411"},{"size":363,"mtime":1637018719293,"results":"792","hashOfConfig":"411"},{"size":1866,"mtime":1637018719333,"results":"793","hashOfConfig":"411"},{"size":497,"mtime":1637018719293,"results":"794","hashOfConfig":"411"},{"size":8301,"mtime":1637018719333,"results":"795","hashOfConfig":"411"},{"size":5808,"mtime":1637018719333,"results":"796","hashOfConfig":"411"},{"size":3932,"mtime":1637018719333,"results":"797","hashOfConfig":"411"},{"size":870,"mtime":1637018719321,"results":"798","hashOfConfig":"411"},{"size":4509,"mtime":1637018719321,"results":"799","hashOfConfig":"411"},{"size":508,"mtime":1637018719285,"results":"800","hashOfConfig":"411"},{"size":6865,"mtime":1637018719293,"results":"801","hashOfConfig":"411"},{"size":4650,"mtime":1637018719293,"results":"802","hashOfConfig":"411"},{"size":1384,"mtime":1637018719293,"results":"803","hashOfConfig":"411"},{"size":3697,"mtime":1637018719333,"results":"804","hashOfConfig":"411"},{"size":1183,"mtime":1637018719317,"results":"805","hashOfConfig":"411"},{"size":3177,"mtime":1637018719317,"results":"806","hashOfConfig":"411"},{"size":337,"mtime":1637018719333,"results":"807","hashOfConfig":"411"},{"size":9194,"mtime":1637018719333,"results":"808","hashOfConfig":"411"},{"size":557,"mtime":1637018719333,"results":"809","hashOfConfig":"411"},{"size":3647,"mtime":1637018719333,"results":"810","hashOfConfig":"411"},{"size":4142,"mtime":1637018719297,"results":"811","hashOfConfig":"411"},{"size":5076,"mtime":1637018719297,"results":"812","hashOfConfig":"411"},{"size":626,"mtime":1637018719333,"results":"813","hashOfConfig":"411"},{"size":621,"mtime":1637018719329,"results":"814","hashOfConfig":"411"},{"size":854,"mtime":1637018719285,"results":"815","hashOfConfig":"411"},{"size":1193,"mtime":1637018719281,"results":"816","hashOfConfig":"411"},{"size":275,"mtime":1637018719289,"results":"817","hashOfConfig":"411"},{"size":1455,"mtime":1637018719317,"results":"818","hashOfConfig":"411"},{"size":1260,"mtime":1637018719289,"results":"819","hashOfConfig":"411"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},"1ga6g7e",{"filePath":"823","messages":"824","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"822"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"822"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"822"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"837"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"822"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"837"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1102","usedDeprecatedRules":"837"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"837"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"837"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"837"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"837"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"837"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"837"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209","usedDeprecatedRules":"837"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1212","usedDeprecatedRules":"837"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"837"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"837"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"837"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1300","usedDeprecatedRules":"837"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303","usedDeprecatedRules":"837"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"837"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1335","messages":"1336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1337","messages":"1338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1339","messages":"1340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1341","messages":"1342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"837"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"837"},{"filePath":"1383","messages":"1384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1385","messages":"1386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"837"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1392","messages":"1393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"837"},{"filePath":"1397","messages":"1398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"837"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1404","messages":"1405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1406","messages":"1407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1412","messages":"1413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1444","usedDeprecatedRules":"837"},{"filePath":"1445","messages":"1446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1455","messages":"1456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1457","messages":"1458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1463","messages":"1464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1467","messages":"1468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1469","messages":"1470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"837"},{"filePath":"1475","messages":"1476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1485","messages":"1486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1499","messages":"1500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1503","messages":"1504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1505","messages":"1506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1509","messages":"1510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1511","messages":"1512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1515","messages":"1516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1517","messages":"1518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1521","messages":"1522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1523","messages":"1524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1525","messages":"1526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1527","messages":"1528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1529","messages":"1530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1531","messages":"1532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1533","messages":"1534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1535","messages":"1536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1537","messages":"1538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1539","messages":"1540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1541","messages":"1542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1543","messages":"1544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1545","messages":"1546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1547","messages":"1548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1549","messages":"1550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1551","messages":"1552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1553","messages":"1554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1555","messages":"1556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1557","messages":"1558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1561","messages":"1562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1563","messages":"1564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1565","messages":"1566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1567","messages":"1568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1569","messages":"1570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1571","messages":"1572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1573","messages":"1574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1575","messages":"1576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1577","messages":"1578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1579","messages":"1580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1581","usedDeprecatedRules":"837"},{"filePath":"1582","messages":"1583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1586","messages":"1587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1588","messages":"1589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1590","messages":"1591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1592","messages":"1593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1594","messages":"1595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1596","messages":"1597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1598","messages":"1599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1600","messages":"1601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1602","messages":"1603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1604","messages":"1605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1606","messages":"1607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1608","messages":"1609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1610","messages":"1611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1612","messages":"1613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1614","messages":"1615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1616","messages":"1617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1622","messages":"1623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1624","messages":"1625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1628","messages":"1629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1630","messages":"1631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1632","messages":"1633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1634","messages":"1635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1636","messages":"1637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1640","messages":"1641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1642","messages":"1643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1644","messages":"1645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1646","messages":"1647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1648","messages":"1649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1650","messages":"1651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1652","messages":"1653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1654","messages":"1655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1656","messages":"1657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1658","messages":"1659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1660","messages":"1661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1662","messages":"1663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1664","messages":"1665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"1666","messages":"1667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},"/workspace/algocloud-frontend/src/index.tsx",[],["1668","1669"],"/workspace/algocloud-frontend/src/App.tsx",["1670","1671","1672","1673","1674"],"/workspace/algocloud-frontend/src/modules/auth/authToken.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/authService.tsx",[],"/workspace/algocloud-frontend/src/modules/settings/settingsService.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/tenantService.tsx",[],"/workspace/algocloud-frontend/src/i18n/index.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/LocalStorage.js",[],["1675","1676"],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/GlobalData.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/User.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/TokenData.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/Application.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/contexts/PairData.js",[],"/workspace/algocloud-frontend/src/modules/store.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/tenantSubdomain.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/authInvitationToken.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/authCurrentTenant.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/RoutesComponent.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/axios/authAxios.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/apollo/queries.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/apollo/client.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/returns.ts",["1677"],"import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport { getShareValueOverTime } from '.'\n\nexport const priceOverrides = [\n  '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\n  '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3' // DAI\n]\n\ninterface ReturnMetrics {\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\n  netReturn: number // net return from t0 -> t1\n  thugswapReturn: number // netReturn - hodlReturn\n  impLoss: number\n  fees: number\n}\n\n// used to calculate returns within a given window bounded by two positions\ninterface Position {\n  pair: any\n  liquidityTokenBalance: number\n  liquidityTokenTotalSupply: number\n  reserve0: number\n  reserve1: number\n  reserveUSD: number\n  token0PriceUSD: number\n  token1PriceUSD: number\n}\n\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1604446999\n\nfunction formatPricesForEarlyTimestamps(position): Position {\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\n      position.token0PriceUSD = 1\n    }\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\n      position.token1PriceUSD = 1\n    }\n    // WBNB price\n    if (position.pair?.token0.id === '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c') {\n      position.token0PriceUSD = 30\n    }\n    if (position.pair?.token1.id === '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c') {\n      position.token1PriceUSD = 30\n    }\n  }\n  return position\n}\n\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\n  let usd = 0\n  let amount0 = 0\n  let amount1 = 0\n  // get all minst and burns to get principal amounts\n  const results = await client.query({\n    query: USER_MINTS_BUNRS_PER_PAIR,\n    variables: {\n      user,\n      pair: pairAddress\n    }\n  })\n  for (const index in results.data.mints) {\n    const mint = results.data.mints[index]\n    const mintToken0 = mint.pair.token0.id\n    const mintToken1 = mint.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount0) * 2\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount1) * 2\n    } else {\n      usd += parseFloat(mint.amountUSD)\n    }\n    amount0 += amount0 + parseFloat(mint.amount0)\n    amount1 += amount1 + parseFloat(mint.amount1)\n  }\n\n  for (const index in results.data.burns) {\n    const burn = results.data.burns[index]\n    const burnToken0 = burn.pair.token0.id\n    const burnToken1 = burn.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount0) * 2\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount1) * 2\n    } else {\n      usd -= parseFloat(results.data.burns[index].amountUSD)\n    }\n\n    amount0 -= parseFloat(results.data.burns[index].amount0)\n    amount1 -= parseFloat(results.data.burns[index].amount1)\n  }\n\n  return { usd, amount0, amount1 }\n}\n\n/**\n * Core algorithm for calculating retursn within one time window.\n * @param positionT0 // users liquidity info and token rates at beginning of window\n * @param positionT1 // '' at the end of the window\n */\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\n\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\n\n  // get starting amounts of token0 and token1 deposited by LP\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\n\n  // get current token values\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\n\n  // calculate squares to find imp loss and fee differences\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\n  // eslint-disable-next-line eqeqeq\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\n\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\n  const token1_amount_no_fees =\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\n  const no_fees_usd =\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\n\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\n  const difference_fees_usd =\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\n\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\n\n  const imp_loss_usd = no_fees_usd - assetValueT1\n  const thugswap_return = difference_fees_usd + imp_loss_usd\n\n  // get net value change for combined data\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\n\n  return {\n    hodleReturn: assetValueT1 - assetValueT0,\n    netReturn: netValueT1 - netValueT0,\n    thugswapReturn: thugswap_return,\n    impLoss: imp_loss_usd,\n    fees: difference_fees_usd\n  }\n}\n\n/**\n * formats data for historical chart for an LPs position in 1 pair over time\n * @param startDateTimestamp // day to start tracking at\n * @param currentPairData // current stat of the pair\n * @param pairSnapshots // history of entries and exits for lp on this pair\n * @param currentBNBPrice // current price of bnb used for usd conversions\n */\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentBNBPrice) {\n  // catch case where data not puplated yet\n  if (!currentPairData.createdAtTimestamp) {\n    return []\n  }\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\n  let sortedPositions = pairSnapshots.sort((a, b) => {\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n  })\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\n  }\n\n  const dayTimestamps: number[] = []\n  while (dayIndex < currentDayIndex) {\n    // only account for days where this pair existed\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\n      dayTimestamps.push(dayIndex * 86400)\n    }\n    dayIndex = dayIndex + 1\n  }\n\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\n  const shareValuesFormatted = {}\n  shareValues?.map(share => {\n    shareValuesFormatted[share.timestamp] = share\n  })\n\n  // set the default position and data\n  let positionT0 = pairSnapshots[0]\n  const formattedHistory: any[] = []\n  let netFees = 0\n\n  // keep track of up to date metrics as we parse each day\n  for (const index in dayTimestamps) {\n    // get the bounds on the day\n    const dayTimestamp = dayTimestamps[index]\n    const timestampCeiling = dayTimestamp + 86400\n\n    // for each change in position value that day, create a window and update\n    const dailyChanges = pairSnapshots.filter(snapshot => {\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n    })\n    for (let i = 0; i < dailyChanges.length; i++) {\n      const positionT1 = dailyChanges[i]\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      netFees = netFees + localReturns.fees\n      positionT0 = positionT1\n    }\n\n    // now treat the end of the day as a hypothetical position\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\n    if (!positionT1) {\n      positionT1 = {\n        pair: currentPairData.id,\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\n        totalSupply: currentPairData.totalSupply,\n        reserve0: currentPairData.reserve0,\n        reserve1: currentPairData.reserve1,\n        reserveUSD: currentPairData.reserveUSD,\n        token0PriceUSD: currentPairData.token0.derivedBNB * currentBNBPrice,\n        token1PriceUSD: currentPairData.token1.derivedBNB * currentBNBPrice\n      }\n    }\n\n    if (positionT1) {\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\n      const currentLiquidityValue =\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\n        parseFloat(positionT1.reserveUSD)\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      const localFees = netFees + localReturns.fees\n\n      formattedHistory.push({\n        date: dayTimestamp,\n        usdValue: currentLiquidityValue,\n        fees: localFees\n      })\n    }\n  }\n\n  return formattedHistory\n}\n\n/**\n * For a given pair and user, get the return metrics\n * @param user\n * @param pair\n * @param bnbPrice\n */\nexport async function getLPReturnsOnPair(user: string, pair, bnbPrice: number, snapshots) {\n  // initialize values\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\n  let hodlReturn = 0\n  let netReturn = 0\n  let thugswapReturn = 0\n  let fees = 0\n\n  snapshots = snapshots.filter(entry => {\n    return entry.pair.id === pair.id\n  })\n\n  // get data about the current position\n  const currentPosition: Position = {\n    pair,\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\n    liquidityTokenTotalSupply: pair.totalSupply,\n    reserve0: pair.reserve0,\n    reserve1: pair.reserve1,\n    reserveUSD: pair.reserveUSD,\n    token0PriceUSD: pair.token0.derivedBNB * bnbPrice,\n    token1PriceUSD: pair.token1.derivedBNB * bnbPrice\n  }\n\n  for (const index in snapshots) {\n    // get positions at both bounds of the window\n    let positionT0 = snapshots[index]\n    let positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\n\n    let results = getMetricsForPositionWindow(positionT0, positionT1)\n    hodlReturn = hodlReturn + results.hodleReturn\n    netReturn = netReturn + results.netReturn\n    thugswapReturn = thugswapReturn + results.thugswapReturn\n    fees = fees + results.fees\n  }\n\n  return {\n    principal,\n    net: {\n      return: netReturn\n    },\n    thugswap: {\n      return: thugswapReturn\n    },\n    fees: {\n      sum: fees\n    }\n  }\n}\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/tokenLists.ts",[],"/workspace/algocloud-frontend/src/i18n/es.tsx",[],"/workspace/algocloud-frontend/src/i18n/pt-BR.tsx",[],"/workspace/algocloud-frontend/src/i18n/en.tsx",[],"/workspace/algocloud-frontend/src/modules/initializers.tsx",[],"/workspace/algocloud-frontend/src/modules/reducers.tsx",[],"/workspace/algocloud-frontend/src/config/index.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/authSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/EmailUnverifiedRoute.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/SuperadminRoute.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/InactiveUserRoute.tsx",[],"/workspace/algocloud-frontend/src/view/shared/CustomLoadable.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/PublicRoute.tsx",[],"/workspace/algocloud-frontend/src/view/shared/ProgressBar.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/EmptyTenantRoute.tsx",[],"/workspace/algocloud-frontend/src/view/routes.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/PrivateRoute.tsx",[],"/workspace/algocloud-frontend/src/view/shared/routes/EmptyPermissionsRoute.tsx",[],"/workspace/algocloud-frontend/src/modules/layout/layoutSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/utils/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/constants/index.js",[],"/workspace/algocloud-frontend/src/modules/auth/authInitializer.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/authReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/layout/layoutReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/tenantReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/settings/settingsReducers.tsx",[],"/workspace/algocloud-frontend/src/config/production.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/superadminReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/plan/planReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/user/userReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/order/orderReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/auditLog/auditLogReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/productReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/customerReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/auth/permissionChecker.tsx",[],"/workspace/algocloud-frontend/src/view/shared/LoadingComponent.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/DashboardPage.tsx",["1678","1679","1680","1681","1682","1683","1684","1685","1686"],"import React from 'react';\nimport { i18n } from 'src/i18n';\nimport DashboardBarChart from 'src/view/dashboard/DashboardBarChart';\nimport DashboardDoughnutChart from 'src/view/dashboard/DashboardDoughnutChart';\nimport DashboardHorizontalBarChart from 'src/view/dashboard/DashboardHorizontalBarChart';\nimport DashboardLineChart from 'src/view/dashboard/DashboardLineChart';\nimport DashboardMixChartOne from 'src/view/dashboard/DashboardMixChartOne';\nimport DashboardMixChartTwo from 'src/view/dashboard/DashboardMixChartTwo';\nimport DashboardPolarChart from 'src/view/dashboard/DashboardPolarChart';\nimport DashboardRadarChart from 'src/view/dashboard/DashboardRadarChart';\nimport Analytics from './analytics/App';\n\nconst DashboardPage = (props) => {\n  return (\n    <>\n    <Analytics />\n      {/* <div\n        style={{\n          padding: 0,\n          marginLeft: '-12px',\n          marginRight: '-12px',\n        }}\n      >\n        <div className=\"row no-gutters\">\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardDoughnutChart />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardMixChartTwo />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardBarChart />\n            </div>\n          </div>\n\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardMixChartOne />\n            </div>\n          </div>\n\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardPolarChart />\n            </div>\n          </div>\n\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardHorizontalBarChart />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardLineChart />\n            </div>\n          </div>\n          <div\n            style={{\n              paddingLeft: '12px',\n              paddingRight: '12px',\n              paddingBottom: '24px',\n            }}\n            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-4\"\n          >\n            <div className=\"bg-box p-2 rounded\">\n              <DashboardRadarChart />\n            </div>\n          </div>\n        </div>\n        <p\n          style={{\n            marginTop: '16px',\n            width: '100%',\n            textAlign: 'center',\n            color: '#bbbbbb',\n          }}\n        >\n          {i18n('dashboard.message')}\n        </p>\n      </div> */}\n    </>\n  );\n};\n\nexport default DashboardPage;\n","/workspace/algocloud-frontend/src/view/layout/Layout.tsx",[],"/workspace/algocloud-frontend/src/security/permissions.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/analytics/AnalyticsPage.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/form/TenantFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListPage.tsx",[],"/workspace/algocloud-frontend/src/view/shared/errors/Error404Page.tsx",[],"/workspace/algocloud-frontend/src/view/shared/errors/Error500Page.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/user/UserListPage.tsx",[],"/workspace/algocloud-frontend/src/view/shared/errors/Error403Page.tsx",[],"/workspace/algocloud-frontend/src/view/auth/VerifyEmailPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/InvitationPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/PasswordResetPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/InactiveUserPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/EmailUnverifiedPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/EmptyPermissionsPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/TenantPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/SignupPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/ForgotPasswordPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/SigninPage.tsx",["1687","1688"],"import React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/auth/authActions';\nimport selectors from 'src/modules/auth/authSelectors';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport Content from 'src/view/auth/styles/Content';\nimport Logo from 'src/view/auth/styles/Logo';\nimport OtherActions from 'src/view/auth/styles/OtherActions';\nimport Wrapper from 'src/view/auth/styles/Wrapper';\nimport I18nFlags from 'src/view/layout/I18nFlags';\nimport ButtonIcon from 'src/view/shared/ButtonIcon';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SocialButtons from 'src/view/auth/styles/SocialButtons';\nimport config from 'src/config';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Message from 'src/view/shared/message';\nimport BackgroundVideo from 'src/components/BackgroundVideo/BackgroundVideo';\nimport 'src/app.css';\n\nconst schema = yup.object().shape({\n  email: yupFormSchemas.string(i18n('user.fields.email'), {\n    required: true,\n  }),\n  password: yupFormSchemas.string(\n    i18n('user.fields.password'),\n    {\n      required: true,\n    },\n  ),\n  rememberMe: yupFormSchemas.boolean(\n    i18n('user.fields.rememberMe'),\n  ),\n});\n\nconst videoSource = \"/assets/video.mp4\";\nfunction SigninPage() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.selectLoading);\n\n  const { socialErrorCode } = queryString.parse(\n    location.search,\n  );\n\n  const externalErrorMessage = useSelector(\n    selectors.selectErrorMessage,\n  );\n\n  const backgroundImageUrl = useSelector(\n    selectors.selectBackgroundImageUrl,\n  );\n  const logoUrl = useSelector(selectors.selectLogoUrl);\n\n  useEffect(() => {\n    dispatch(actions.doClearErrorMessage());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (socialErrorCode) {\n      if (socialErrorCode === 'generic') {\n        Message.error(i18n('errors.defaultErrorMessage'));\n      } else {\n        Message.error(\n          i18n(`auth.social.errors.${socialErrorCode}`),\n        );\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [initialValues] = useState({\n    email: '',\n    password: '',\n    rememberMe: true,\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n    defaultValues: initialValues,\n  });\n\n  const onSubmit = ({ email, password, rememberMe }) => {\n    dispatch(\n      actions.doSigninWithEmailAndPassword(\n        email,\n        password,\n        rememberMe,\n      ),\n    );\n  };\n\n  return (\n    <Wrapper className=\"screenshot\" >      \n      <BackgroundVideo\n        blur={0}\n        videoSource={videoSource} >\n      </BackgroundVideo>\n      <Content className=\"screenshot-2\">\n             <Logo>\n             <a className=\"algocloud-navbar-brand-landing\" href=\".\"><div className=\"algocloud-font-landing\"><strong>Algo</strong>Cloud</div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"22\" fill=\"currentColor\" viewBox=\"-2 3 18 12\" className=\"algocloud-logo-landing\"><path d=\"M8.5 4a4.002 4.002 0 0 0-3.8 2.745.5.5 0 1 1-.949-.313 5.002 5.002 0 0 1 9.654.595A3 3 0 0 1 13 13H.5a.5.5 0 0 1 0-1H13a2 2 0 0 0 .001-4h-.026a.5.5 0 0 1-.5-.445A4 4 0 0 0 8.5 4zM0 8.5A.5.5 0 0 1 .5 8h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5z\"></path></svg></a>\n          {logoUrl ? (\n            <img\n              src={logoUrl}\n              width=\"240px\"\n              alt={i18n('app.title')}\n            />\n          ) : (\n            <h1></h1>\n          )}\n        </Logo>\n        <FormProvider {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <InputFormItem\n              name=\"email\"\n              placeholder={i18n('user.fields.email')}\n              autoComplete=\"email\"\n              autoFocus\n              externalErrorMessage={externalErrorMessage}\n            />\n            <InputFormItem\n              name=\"password\"\n              placeholder={i18n('user.fields.password')}\n              autoComplete=\"password\"\n              type=\"password\"\n            />\n\n            <div className=\"d-flex form-group\">\n              <div className=\"screenshot-checkbox-box col-6\">\n                <input\n                  className=\"screenshot-checkbox\"\n                  type=\"checkbox\"\n                  id={'rememberMe'}\n                  name={'rememberMe'}\n                  ref={form.register}\n                />\n\n                <label\n                  className=\"screenshot-checkbox-label\"\n                  htmlFor={'rememberMe'}\n                >\n                  {i18n('user.fields.rememberMe')}\n                </label>\n              </div>\n\n              <div className=\"col-6 pr-0\">\n                <Link\n                  className=\"btn btn-sm btn-link\"\n                  style={{ float: 'right' }}\n                  to=\"/auth/forgot-password\"\n                >\n                  {i18n('auth.forgotPassword')}\n                </Link>\n              </div>\n            </div>\n\n            <button\n              className=\"screenshot-btn btn btn-primary btn-block\"\n              type=\"submit\"\n              disabled={loading}\n            >\n              <ButtonIcon loading={loading} />{' '}\n              {i18n('auth.signin')}\n            </button>\n\n            <SocialButtons>\n              <a\n                href={`${config.backendUrl}/auth/social/facebook`}\n              >\n                <i\n                  className=\"fab fa-facebook\"\n                  style={{\n                    color: '#3B5998',\n                  }}\n                />\n              </a>\n\n              <a\n                href={`${config.backendUrl}/auth/social/google`}\n              >\n                <i\n                  className=\"fab fa-google\"\n                  style={{\n                    color: '#DB4437',\n                  }}\n                />\n              </a>\n            </SocialButtons>\n\n            <OtherActions>\n              <Link\n                className=\"btn btn-sm btn-link\"\n                to=\"/auth/signup\"\n              >\n                {i18n('auth.createAnAccount')}\n              </Link>\n            </OtherActions>\n\n          </form>\n          <div className=\"built-by\">\n            <div className=\"built-by-flags\"><I18nFlags className=\"built-by-flags\"/></div>\n  <h2>Built by HEADLINE</h2><p className=\"copyright\">© 2021 HEADLINE INC. All rights reserved.</p></div>\n        </FormProvider>\n      </Content>\n    </Wrapper>\n    \n  );\n}\n\nexport default SigninPage;\n","/workspace/algocloud-frontend/src/view/order/importer/OrderImporterPage.tsx",[],"/workspace/algocloud-frontend/src/view/order/view/OrderViewPage.tsx",[],"/workspace/algocloud-frontend/src/view/order/form/OrderFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/order/list/OrderListPage.tsx",[],"/workspace/algocloud-frontend/src/view/product/view/ProductViewPage.tsx",[],"/workspace/algocloud-frontend/src/view/product/importer/ProductImporterPage.tsx",[],"/workspace/algocloud-frontend/src/view/product/list/ProductListPage.tsx",[],"/workspace/algocloud-frontend/src/view/product/form/ProductFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/customer/list/CustomerListPage.tsx",[],"/workspace/algocloud-frontend/src/view/customer/importer/CustomerImporterPage.tsx",[],"/workspace/algocloud-frontend/src/view/customer/view/CustomerViewPage.tsx",[],"/workspace/algocloud-frontend/src/view/customer/form/CustomerFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/App.js",["1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ApolloProvider } from 'react-apollo'\nimport { client } from './apollo/client'\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router'\nimport GlobalPage from './pages/GlobalPage'\nimport TokenPage from './pages/TokenPage'\nimport PairPage from './pages/PairPage'\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\nimport { isAddress } from './utils'\nimport AccountPage from './pages/AccountPage'\nimport AllTokensPage from './pages/AllTokensPage'\nimport AllPairsPage from './pages/AllPairsPage'\nimport PinnedData from './components/PinnedData'\n\nimport SideNav from './components/SideNav'\nimport AccountLookup from './pages/AccountLookup'\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from './constants'\nimport LocalLoader from './components/LocalLoader'\nimport { useLatestBlock } from './contexts/Application'\nimport bg from './bg.png'\n\nimport Web3 from 'web3'\n\nimport { isMobile } from 'react-device-detect'\nimport ThemeProvider, { GlobalStyle } from './Theme'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\nimport GlobalDataContextProvider from './contexts/GlobalData'\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\nimport ApplicationContextProvider from './contexts/Application'\nimport UserContextProvider from './contexts/User'\n\nconst WarningWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst WarningBanner = styled.div`\n  background-color: ${({ theme }) => theme.bg1};\n  padding: 1.5rem;\n  color: white;\n  width: 100%;\n  text-align: center;\n  font-weight: 500;\n`\n\nconst AppWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  background-image: url(${bg});\n  background-size: 100% auto;\n`\nconst ContentWrapper = styled.div`\n  display: grid;\n  // grid-template-columns: ${({ open }) => (open ? '220px 1fr 200px' : '220px 1fr 64px')};\n  grid-template-columns: 1fr;\n  @media screen and (max-width: 1400px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 1fr;\n    max-width: 100vw;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n`\n\nconst Right = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0rem;\n  z-index: 99;\n  width: ${({ open }) => (open ? '220px' : '64px')};\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\n  overflow: scroll;\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`\n\nconst Center = styled.div`\n  height: 100%;\n  z-index: 9999;\n  transition: width 0.25s ease;\n  background-color: ${({ theme }) => theme.onlyLight};\n`\n\n/**\n * Wrap the component with the header and sidebar pinned tab\n */\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\n  return (\n    <>\n      <ContentWrapper open={savedOpen}>\n        <Center id=\"center\">{children}</Center>\n        {/* <Right open={savedOpen}>\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\n        </Right> */}\n      </ContentWrapper>\n    </>\n  )\n}\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TokenDataContextProvider>\n          <GlobalDataContextProvider>\n            <PairDataContextProvider>\n              <UserContextProvider>{children}</UserContextProvider>\n            </PairDataContextProvider>\n          </GlobalDataContextProvider>\n        </TokenDataContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <PairDataContextUpdater />\n      <TokenDataContextUpdater />\n    </>\n  )\n}\n\nfunction Analytics() {\n  const [savedOpen, setSavedOpen] = useState(false)\n  const [bscLatestBlock, setBscLatestBlock] = useState()\n  const globalData = useGlobalData()\n  const globalChartData = useGlobalChartData()\n  const latestBlock = useLatestBlock()\n  // const headBlock = useHeadBlock() // show warning// //\n  const web3 = new Web3(new Web3.providers.HttpProvider('https://bsc-dataseed.binance.org/'))\n\n  useEffect(() => {\n    async function getCurrentBlock() {\n      const block = await web3.eth.getBlock('latest')\n      setBscLatestBlock(block.number)\n    }\n    getCurrentBlock()\n  }, [web3.eth])\n\n  const blockDiff = bscLatestBlock - latestBlock\n  const timeDiff = parseInt((blockDiff * 3) / 60)\n\n  console.log('latestBlock = ', latestBlock);\n  console.log('globalData = ', globalData);\n  console.log('globalChartData = ', globalChartData);\n  \n  console.log(latestBlock &&\n    globalData &&\n    Object.keys(globalData).length > 0 &&\n    globalChartData &&\n    Object.keys(globalChartData).length > 0);\n\n  return (\n    <ContextProviders>\n    <Updaters />\n    <ThemeProvider>\n      <>\n        <GlobalStyle />\n        <ApolloProvider client={client}>\n          <AppWrapper>\n            {timeDiff > 10 && (\n              <WarningWrapper>\n                <WarningBanner>\n                  {`>> Site has synced to block ${latestBlock} / ${bscLatestBlock} (app. ${timeDiff} mins behind) <<`}\n                </WarningBanner>\n              </WarningWrapper>\n            )}\n            {/* <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n              <GlobalPage />\n            </LayoutWrapper> */}\n            {\n            globalData &&\n            Object.keys(globalData).length > 0 &&\n            globalChartData &&\n            Object.keys(globalChartData).length > 0 ? (<>\n                  {/* <Route\n                    exacts\n                    strict\n                    path=\"/dashboard/token/:tokenAddress\"\n                    render={({ match }) => {\n                      if (OVERVIEW_TOKEN_BLACKLIST.includes(match.params.tokenAddress.toLowerCase())) {\n                        return <Redirect to=\"/dashboard/home\" />\n                      }\n                      if (isAddress(match.params.tokenAddress.toLowerCase())) {\n                        return (\n                          <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                            <TokenPage address={match.params.tokenAddress.toLowerCase()} />\n                          </LayoutWrapper>\n                        )\n                      } else {\n                        return <Redirect to=\"/dashboard/home\" />\n                      }\n                    }}\n                  />\n                  <Route\n                    exacts\n                    strict\n                    path=\"/dashboard/pair/:pairAddress\"\n                    render={({ match }) => {\n                      if (PAIR_BLACKLIST.includes(match.params.pairAddress.toLowerCase())) {\n                        return <Redirect to=\"/dashboard/home\" />\n                      }\n                      if (isAddress(match.params.pairAddress.toLowerCase())) {\n                        return (\n                          <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                            <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\n                          </LayoutWrapper>\n                        )\n                      } else {\n                        return <Redirect to=\"/dashboard/home\" />\n                      }\n                    }}\n                  />\n                  <Route\n                    exacts\n                    strict\n                    path=\"/dashboard/account/:accountAddress\"\n                    render={({ match }) => {\n                      if (isAddress(match.params.accountAddress.toLowerCase())) {\n                        return (\n                          <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                            <AccountPage account={match.params.accountAddress.toLowerCase()} />\n                          </LayoutWrapper>\n                        )\n                      } else {\n                        return <Redirect to=\"/dashboard/home\" />\n                      }\n                    }}\n                  />\n\n                  <Route path=\"/dashboard/home\">\n                    <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                      <GlobalPage />\n                    </LayoutWrapper>\n                  </Route>\n\n                  <Route path=\"/dashboard/tokens\">\n                    <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                      <AllTokensPage />\n                    </LayoutWrapper>\n                  </Route>\n\n                  <Route path=\"/dashboard/pairs\">\n                    <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                      <AllPairsPage />\n                    </LayoutWrapper>\n                  </Route>\n\n                  <Route path=\"/dashboard/accounts\">\n                    <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                      <AccountLookup />\n                    </LayoutWrapper>\n                  </Route>\n\n                  <Redirect to=\"/dashboard/home\" /> */}\n                  <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                      <GlobalPage />\n                    </LayoutWrapper>\n                  </>\n            ) : (\n              <LocalLoader fill=\"true\" />\n            )}\n          </AppWrapper>\n        </ApolloProvider>\n        \n        </>\n    </ThemeProvider>\n  </ContextProviders>\n  )\n}\n\nexport default Analytics\n","/workspace/algocloud-frontend/src/modules/auth/authActions.tsx",[],"/workspace/algocloud-frontend/src/modules/layout/layoutActions.tsx",[],"/workspace/algocloud-frontend/src/modules/settings/settingsActions.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroyReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormReducers.tsx",[],"/workspace/algocloud-frontend/src/security/roles.tsx",[],"/workspace/algocloud-frontend/src/security/plans.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroyReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/view/customerViewReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/list/customerListReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/form/customerFormReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/importer/productImporterReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/destroy/productDestroyReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/view/productViewReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/form/productFormReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/auditLog/auditLogActions.tsx",[],"/workspace/algocloud-frontend/src/security/storage.tsx",[],"/workspace/algocloud-frontend/src/components/BackgroundVideo/BackgroundVideo.js",[],"/workspace/algocloud-frontend/src/modules/product/list/productListReducers.tsx",[],"/workspace/algocloud-frontend/src/view/layout/Menu.tsx",["1707","1708"],"import React, { useLayoutEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport actions from 'src/modules/layout/layoutActions';\nimport layoutSelectors from 'src/modules/layout/layoutSelectors';\nimport MenuWrapper from 'src/view/layout/styles/MenuWrapper';\nimport menus from 'src/view/menus';\nimport selectors from 'src/modules/auth/authSelectors';\n\nfunction Menu(props) {\n  const dispatch = useDispatch();\n\n  const logoUrl = useSelector(selectors.selectLogoUrl);\n\n  const currentTenant = useSelector(\n    authSelectors.selectCurrentTenant,\n  );\n  const currentUser = useSelector(\n    authSelectors.selectCurrentUser,\n  );\n  const menuVisible = useSelector(\n    layoutSelectors.selectMenuVisible,\n  );\n\n  const permissionChecker = new PermissionChecker(\n    currentTenant,\n    currentUser,\n  );\n\n  useLayoutEffect(() => {\n    const toggleMenuOnResize = () => {\n      window.innerWidth < 576\n        ? dispatch(actions.doHideMenu())\n        : dispatch(actions.doShowMenu());\n    };\n\n    toggleMenuOnResize();\n\n    window.addEventListener('resize', toggleMenuOnResize);\n\n    return () => {\n      window.removeEventListener(\n        'resize',\n        toggleMenuOnResize,\n      );\n    };\n  }, [dispatch]);\n\n  const selectedKeys = () => {\n    const url = props.url;\n\n    const match = menus.find((option) => {\n      if (option.exact) {\n        return url === option.path;\n      }\n\n      return (\n        url === option.path ||\n        url.startsWith(option.path + '/')\n      );\n    });\n\n    if (match) {\n      return [match.path];\n    }\n\n    return [];\n  };\n\n  const match = (permission) => {\n    return permissionChecker.match(permission);\n  };\n\n  const lockedForCurrentPlan = (permission) => {\n    return permissionChecker.lockedForCurrentPlan(\n      permission,\n    );\n  };\n\n  return (\n    <MenuWrapper\n      style={{\n        display: menuVisible ? 'block' : 'none',\n      }}\n    >\n      <div className=\"menu-nav\">\n      <a className=\"algocloud-navbar-brand\" href=\".\"><div className=\"algocloud-font\"><strong>Algo</strong>Cloud</div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"22\" fill=\"currentColor\" viewBox=\"-2 2 18 12\" className=\"algocloud-logo\"><path d=\"M8.5 4a4.002 4.002 0 0 0-3.8 2.745.5.5 0 1 1-.949-.313 5.002 5.002 0 0 1 9.654.595A3 3 0 0 1 13 13H.5a.5.5 0 0 1 0-1H13a2 2 0 0 0 .001-4h-.026a.5.5 0 0 1-.5-.445A4 4 0 0 0 8.5 4zM0 8.5A.5.5 0 0 1 .5 8h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5z\"></path></svg></a>\n\n        <ul className=\"menu-ul\">\n          {menus\n            .filter((menu) =>\n              match(menu.permissionRequired),\n            )\n            .map((menu) => (\n              <li\n                key={menu.path}\n                className={`menu-li text-nowrap ${\n                  selectedKeys().includes(menu.path)\n                    ? 'active'\n                    : ''\n                }`}\n              >\n                <Link to={menu.path}>\n                  <i\n                    className={`menu-icon ${menu.icon}`}\n                  ></i>{' '}\n                  <span>{menu.label}</span>\n                </Link>\n              </li>\n            ))}\n\n          {menus\n            .filter((menu) =>\n              lockedForCurrentPlan(menu.permissionRequired),\n            )\n            .map((menu) => (\n              <li\n                key={menu.path}\n                className={`menu-li text-nowrap`}\n                style={{\n                  cursor: 'auto',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  opacity: 0.5,\n                }}\n              >\n                <div className=\"menu-li-locked\">\n                  <i\n                    className={`menu-icon ${menu.icon}`}\n                  ></i>{' '}\n                  <span>{menu.label}</span>\n                </div>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </MenuWrapper>\n  );\n}\n\nexport default Menu;\n","/workspace/algocloud-frontend/src/view/layout/Header.tsx",[],"/workspace/algocloud-frontend/src/view/layout/styles/LayoutWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/ButtonIcon.tsx",[],"/workspace/algocloud-frontend/src/view/layout/I18nFlags.tsx",[],"/workspace/algocloud-frontend/src/view/shared/message.tsx",[],"/workspace/algocloud-frontend/src/view/shared/errors/styles/ErrorWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/auth/styles/Wrapper.tsx",[],"/workspace/algocloud-frontend/src/view/auth/styles/SocialButtons.tsx",[],"/workspace/algocloud-frontend/src/view/auth/styles/OtherActions.tsx",[],"/workspace/algocloud-frontend/src/view/auth/styles/Content.tsx",[],"/workspace/algocloud-frontend/src/view/auth/styles/Logo.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/yup/yupFormSchemas.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/InputFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/Spinner.tsx",[],"/workspace/algocloud-frontend/src/view/shared/Breadcrumb.tsx",[],"/workspace/algocloud-frontend/src/view/layout/styles/ContentWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/PageTitle.tsx",[],"/workspace/algocloud-frontend/src/modules/product/form/productFormSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/product/form/productFormActions.tsx",[],"/workspace/algocloud-frontend/src/view/product/form/ProductForm.tsx",[],"/workspace/algocloud-frontend/src/view/customer/form/CustomerForm.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/form/customerFormSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/form/customerFormActions.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AccountLookup.js",["1709","1710"],"import React, { useEffect } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { TYPE } from '../Theme'\nimport { PageWrapper, FullWrapper } from '../components'\nimport Panel from '../components/Panel'\nimport LPList from '../components/LPList'\nimport styled from 'styled-components'\nimport AccountSearch from '../components/AccountSearch'\nimport { useTopLps } from '../contexts/GlobalData'\nimport LocalLoader from '../components/LocalLoader'\nimport { RowBetween } from '../components/Row'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\n\nconst AccountWrapper = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nfunction AccountLookup() {\n  // scroll to top\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const topLps = useTopLps()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <AccountWrapper>\n          <AccountSearch />\n        </AccountWrapper>\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n          Top Liquidity Positions\n        </TYPE.main>\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(AccountLookup)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AllTokensPage.js",["1711"],"import React, { useEffect } from 'react'\nimport 'feather-icons'\n\nimport TopTokenList from '../components/TokenList'\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\n\nfunction AllTokensPage() {\n  const allTokens = useAllTokenData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below600 = useMedia('(max-width: 800px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\n          <TopTokenList tokens={allTokens} itemMax={50} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllTokensPage\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/PairPage.js",["1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738"],"import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport { PageWrapper, ContentWrapperLarge, StyledIcon } from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getAstroLink, getSwapLink } from '../utils'\nimport { useColor } from '../hooks'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useBnbPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD\n  } = usePairData(pairAddress)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor(pairAddress)\n\n  // liquidity\n  const liquidity = trackedReserveUSD\n    ? formattedNum(trackedReserveUSD, true)\n    : reserveUSD\n    ? formattedNum(reserveUSD, true)\n    : '-'\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // mark if using untracked liquidity\n  const [usingTracked, setUsingTracked] = useState(true)\n  useEffect(() => {\n    setUsingTracked(!trackedReserveUSD ? false : true)\n  }, [trackedReserveUSD])\n\n  // volume\t  // volume\n  const volume =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUntracked : oneDayVolumeUSD, true)\n      : oneDayVolumeUSD === 0\n      ? '$0'\n      : '-'\n\n  // mark if using untracked volume\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\n  useEffect(() => {\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\n  }, [oneDayVolumeUSD])\n\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [bnbPrice] = useBnbPrice()\n  const token0USD =\n    token0?.derivedBNB && bnbPrice ? formattedNum(parseFloat(token0.derivedBNB) * parseFloat(bnbPrice), true) : ''\n\n  const token1USD =\n    token1?.derivedBNB && bnbPrice ? formattedNum(parseFloat(token1.derivedBNB) * parseFloat(bnbPrice), true) : ''\n\n  // rates\n  const token0Rate = reserve0 && reserve1 ? formattedNum(reserve1 / reserve0) : '-'\n  const token1Rate = reserve0 && reserve1 ? formattedNum(reserve0 / reserve1) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = token0?.symbol.length > 6 ? token0?.symbol.slice(0, 5) + '...' : token0?.symbol\n  const formattedSymbol1 = token1?.symbol.length > 6 ? token1?.symbol.slice(0, 5) + '...' : token1?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  const listedTokens = useListedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <span />\n      <Warning\n        type={'pair'}\n        show={!dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))}\n        setShow={markAsDismissed}\n        address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n        <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {token0?.symbol}-{token1?.symbol}\n          </TYPE.body>\n          <Link\n            style={{ width: 'fit-content' }}\n            color={backgroundColor}\n            external\n            href={'https://bscscan.com/address/' + pairAddress}\n          >\n            <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\n              ({pairAddress.slice(0, 8) + '...' + pairAddress.slice(36, 42)})\n            </Text>\n          </Link>\n          </AutoRow>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))\n          }\n        >\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', width: '100%' }}>\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {token0 && token1 && (\n                      <DoubleTokenLogo a0={token0?.id || ''} a1={token1?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {token0 && token1 ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${token0?.id}`)}>{token0.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${token1?.id}`)}>\n                            {token1.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                        ''\n                      )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{ flexDirection: below1080 ? 'row-reverse' : 'initial' }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, token0.id, token1.id, token0.symbol, token1.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Link external href={getPoolLink(token0?.id, token1?.id)}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink(token0?.id, token1?.id)}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                  <Link href={getAstroLink(pairAddress, token0?.symbol, token1?.symbol)} target=\"_blank\">\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      View Chart on ChartEx.Pro\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap'\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${token0?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token0?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol0} = ${token0Rate} ${formattedSymbol1} ${\n                          parseFloat(token0?.derivedBNB) ? '(' + token0USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${token1?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token1?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol1} = ${token1Rate} ${formattedSymbol0}  ${\n                          parseFloat(token1?.derivedBNB) ? '(' + token1USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && <TYPE.main fontSize={'1.125rem'}>Pair Stats</TYPE.main>}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity {!usingTracked ? '(Untracked)' : ''}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${token0?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token0?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve0 ? formattedNum(reserve0) : ''}{' '}\n                            <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${token1?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token1?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve1 ? formattedNum(reserve1) : ''}{' '}\n                            <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ gridColumn: below1080 ? '1' : '2/4', gridRow: below1080 ? '' : '1/5' }}>\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserve1 / reserve0}\n                    base1={reserve0 / reserve1}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem'\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem'\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />-\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {token0 && token0.id.slice(0, 6) + '...' + token0.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token0?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {token1 && token1.id.slice(0, 6) + '...' + token1.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token1?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://bscscan.com/address/' + pairAddress}>\n                      View on BscScan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AccountPage.js",["1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758","1759"],"import React, { useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useUserTransactions, useUserPositions } from '../contexts/User'\nimport TxnList from '../components/TxnList'\nimport Panel from '../components/Panel'\nimport { formattedNum } from '../utils'\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport UserChart from '../components/UserChart'\nimport PairReturnsChart from '../components/PairReturnsChart'\nimport PositionList from '../components/PositionList'\nimport { TYPE } from '../Theme'\nimport { ButtonDropdown } from '../components/ButtonStyled'\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport { Bookmark, Activity } from 'react-feather'\nimport Link from '../components/Link'\nimport { FEE_WARNING_TOKENS } from '../constants'\nimport { BasicLink } from '../components/Link'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\n\nconst AccountWrapper = styled.div`\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 6px 16px;\n  border-radius: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Header = styled.div``\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid #edeef2;\n  border-radius: 12px;\n`\n\nconst Flyout = styled.div`\n  position: absolute;\n  top: 38px;\n  left: -1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 999;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  padding-top: 4px;\n  border: 1px solid #edeef2;\n  border-top: none;\n`\n\nconst MenuRow = styled(Row)`\n  width: 100%;\n  padding: 12px 0;\n  padding-left: 12px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: 1fr;\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n`\n\nconst Warning = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text1};\n  padding: 1rem;\n  font-weight: 600;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  width: calc(100% - 2rem);\n`\n\nfunction AccountPage({ account }) {\n  // get data for this account\n  const transactions = useUserTransactions(account)\n  const positions = useUserPositions(account)\n\n  // get data for user stats\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\n\n  // get derived totals\n  let totalSwappedUSD = useMemo(() => {\n    return transactions?.swaps\n      ? transactions?.swaps.reduce((total, swap) => {\n          return total + parseFloat(swap.amountUSD)\n        }, 0)\n      : 0\n  }, [transactions])\n\n  // if any position has token from fee warning list, show warning\n  const [showWarning, setShowWarning] = useState(false)\n  useEffect(() => {\n    if (positions) {\n      for (let i = 0; i < positions.length; i++) {\n        if (\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\n        ) {\n          setShowWarning(true)\n        }\n      }\n    }\n  }, [positions])\n\n  // settings for list view and dropdowns\n  const hideLPContent = positions && positions.length === 0\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [activePosition, setActivePosition] = useState()\n\n  const dynamicPositions = activePosition ? [activePosition] : positions\n\n  const aggregateFees = dynamicPositions?.reduce(function(total, position) {\n    return total + position.fees.sum\n  }, 0)\n\n  const positionValue = useMemo(() => {\n    return dynamicPositions\n      ? dynamicPositions.reduce((total, position) => {\n          return (\n            total +\n            (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\n              position?.pair?.reserveUSD\n          )\n        }, 0)\n      : null\n  }, [dynamicPositions])\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\n            <Link lineHeight={'145.23%'} href={'https://bscscan.com/address/' + account} target=\"_blank\">\n              {' '}\n              {account?.slice(0, 42)}{' '}\n            </Link>\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Header>\n          <RowBetween>\n            <span>\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n              <Link lineHeight={'145.23%'} href={'https://bscscan.com/address/' + account} target=\"_blank\">\n                <TYPE.main fontSize={14}>View on BscScan</TYPE.main>\n              </Link>\n            </span>\n            <AccountWrapper>\n              <StyledIcon>\n                <Bookmark style={{ opacity: 0.4 }} />\n              </StyledIcon>\n            </AccountWrapper>\n          </RowBetween>\n        </Header>\n        <DashboardWrapper>\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\n          {!hideLPContent && (\n            <DropdownWrapper>\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\n                {!activePosition && (\n                  <RowFixed>\n                    <StyledIcon>\n                      <Activity size={16} />\n                    </StyledIcon>\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                  </RowFixed>\n                )}\n                {activePosition && (\n                  <RowFixed>\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\n                    <TYPE.body ml={'16px'}>\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\n                    </TYPE.body>\n                  </RowFixed>\n                )}\n              </ButtonDropdown>\n              {showDropdown && (\n                <Flyout>\n                  <AutoColumn gap=\"0px\">\n                    {positions?.map((p, i) => {\n                      if (p.pair.token1.symbol === 'WBNB') {\n                        p.pair.token1.symbol = 'BNB'\n                      }\n                      if (p.pair.token0.symbol === 'WBNB') {\n                        p.pair.token0.symbol = 'BNB'\n                      }\n                      return (\n                        p.pair.id !== activePosition?.pair.id && (\n                          <MenuRow\n                            onClick={() => {\n                              setActivePosition(p)\n                              setShowDropdown(false)\n                            }}\n                            key={i}\n                          >\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\n                            <TYPE.body ml={'16px'}>\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\n                            </TYPE.body>\n                          </MenuRow>\n                        )\n                      )\n                    })}\n                    {activePosition && (\n                      <MenuRow\n                        onClick={() => {\n                          setActivePosition()\n                          setShowDropdown(false)\n                        }}\n                      >\n                        <RowFixed>\n                          <StyledIcon>\n                            <Activity size={16} />\n                          </StyledIcon>\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                        </RowFixed>\n                      </MenuRow>\n                    )}\n                  </AutoColumn>\n                </Flyout>\n              )}\n            </DropdownWrapper>\n          )}\n          {!hideLPContent && (\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\n              <AutoRow gap=\"20px\">\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\n                      {positionValue\n                        ? formattedNum(positionValue, true)\n                        : positionValue === 0\n                        ? formattedNum(0, true)\n                        : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n              </AutoRow>\n            </Panel>\n          )}\n          {!hideLPContent && (\n            <PanelWrapper>\n              <Panel style={{ gridColumn: '1' }}>\n                {activePosition ? (\n                  <PairReturnsChart account={account} position={activePosition} />\n                ) : (\n                  <UserChart account={account} position={activePosition} />\n                )}\n              </Panel>\n            </PanelWrapper>\n          )}\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Positions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem'\n            }}\n          >\n            <PositionList positions={positions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Transactions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem'\n            }}\n          >\n            <TxnList transactions={transactions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Wallet Stats\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem'\n            }}\n          >\n            <AutoRow gap=\"20px\">\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\n                <TYPE.main>Total Value Swapped</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\n                </TYPE.header>\n                <TYPE.main>Total Fees Paid</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\n                <TYPE.main>Total Transactions</TYPE.main>\n              </AutoColumn>\n            </AutoRow>\n          </Panel>\n        </DashboardWrapper>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AccountPage\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/AllPairsPage.js",["1760"],"import React, { useEffect } from 'react'\nimport 'feather-icons'\n\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllPairData } from '../contexts/PairData'\nimport PairList from '../components/PairList'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\n\nfunction AllPairsPage() {\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below800 = useMedia('(max-width: 800px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\n          {!below800 && <Search small={true} />}\n        </RowBetween>\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllPairsPage\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/TokenPage.js",["1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783"],"import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link from '../components/Link'\nimport Panel from '../components/Panel'\nimport TokenLogo from '../components/TokenLogo'\nimport PairList from '../components/PairList'\nimport Loader from '../components/LocalLoader'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport TxnList from '../components/TxnList'\nimport TokenChart from '../components/TokenChart'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { useColor } from '../hooks'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport { useDataForList } from '../contexts/PairData'\nimport { useEffect } from 'react'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport { PlusCircle, Bookmark } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto 1fr;\n  column-gap: 30px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction TokenPage({ address, history }) {\n  const {\n    id,\n    name,\n    symbol,\n    priceUSD,\n    oneDayVolumeUSD,\n    totalLiquidityUSD,\n    volumeChangeUSD,\n    oneDayVolumeUT,\n    volumeChangeUT,\n    priceChangeUSD,\n    liquidityChangeUSD,\n    oneDayTxns,\n    txnChange\n  } = useTokenData(address)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  // detect color from token\n  const backgroundColor = useColor(id, symbol)\n\n  const allPairs = useTokenPairs(address)\n\n  // pairs to show in pair list\n  const fetchedPairsList = useDataForList(allPairs)\n\n  // all transactions with this token\n  const transactions = useTokenTransactions(address)\n\n  // price\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\n\n  // volume\n  const volume =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUT : oneDayVolumeUSD, true)\n      : oneDayVolumeUSD === 0\n      ? '$0'\n      : '-'\n\n  // mark if using untracked volume\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\n  useEffect(() => {\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\n  }, [oneDayVolumeUSD])\n\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\n\n  // liquidity\n  const liquidity = totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : totalLiquidityUSD === 0 ? '$0' : '-'\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // transactions\n  const txnChangeFormatted = formattedPercent(txnChange)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below800 = useMedia('(max-width: 800px)')\n  const below600 = useMedia('(max-width: 600px)')\n  const below500 = useMedia('(max-width: 500px)')\n\n  // format for long symbol\n  const LENGTH = below1080 ? 10 : 16\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n  const [savedTokens, addToken] = useSavedTokens()\n  const listedTokens = useListedTokens()\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n\n      <Warning\n        type={'token'}\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\n        setShow={markAsDismissed}\n        address={address}\n      />\n      <ContentWrapper>\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\n            <TYPE.body>\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\n              {'  '}\n            </TYPE.body>\n            <Link\n              style={{ width: 'fit-content' }}\n              color={backgroundColor}\n              external\n              href={'https://bscscan.com/address/' + address}\n            >\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\n              </Text>\n            </Link>\n          </AutoRow>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n            <RowBetween style={{ flexWrap: 'wrap', marginBottom: '2rem', alignItems: 'flex-start' }}>\n              <RowFixed style={{ flexWrap: 'wrap' }}>\n                <RowFixed style={{ alignItems: 'baseline' }}>\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\n                    <RowFixed gap=\"6px\">\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\n                    </RowFixed>\n                  </TYPE.main>{' '}\n                  {!below1080 && (\n                    <>\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\n                        {price}\n                      </TYPE.main>\n                      {priceChange}\n                    </>\n                  )}\n                </RowFixed>\n              </RowFixed>\n              <span>\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\n                  {!!!savedTokens[address] && !below800 ? (\n                    <Hover onClick={() => addToken(address, symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n                  <Link href={getPoolLink(address)} target=\"_blank\">\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link href={getSwapLink(address)} target=\"_blank\">\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </span>\n            </RowBetween>\n\n            <>\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n                {below1080 && price && (\n                  <Panel>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Price</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        {' '}\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                          {price}\n                        </TYPE.main>\n                        <TYPE.main>{priceChange}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </Panel>\n                )}\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {oneDayTxns ? localNumber(oneDayTxns) : oneDayTxns === 0 ? 0 : '-'}\n                      </TYPE.main>\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ gridColumn: below1080 ? '1' : '2/4', gridRow: below1080 ? '' : '1/4' }}>\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\n                </Panel>\n              </PanelWrapper>\n            </>\n\n            <span>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Top Pairs\n              </TYPE.main>\n            </span>\n            <Panel\n              rounded\n              style={{\n                marginTop: '1.5rem',\n                padding: '1.125rem 0 '\n              }}\n            >\n              {address && fetchedPairsList ? (\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} />\n              ) : (\n                <Loader />\n              )}\n            </Panel>\n            <RowBetween mt={40} mb={'1rem'}>\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\n            </RowBetween>\n            <Panel rounded>\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\n            </Panel>\n            <>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem'\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Symbol</TYPE.main>\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={symbol} maxCharacters={12} />\n                    </Text>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={name} maxCharacters={16} />\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={address} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://bscscan.com/address/' + address}>\n                      View on BscScan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(TokenPage)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/pages/GlobalPage.js",["1784","1785","1786","1787","1788","1789","1790","1791","1792","1793"],"import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport styled from 'styled-components'\n\nimport { AutoRow, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport PairList from '../components/PairList'\nimport TopTokenList from '../components/TokenList'\nimport TxnList from '../components/TxnList'\nimport GlobalChart from '../components/GlobalChart'\nimport Search from '../components/Search'\nimport GlobalStats from '../components/GlobalStats'\n\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\nimport { useAllPairData } from '../contexts/PairData'\nimport { useMedia } from 'react-use'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { formattedNum, formattedPercent } from '../utils'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { CustomLink } from '../components/Link'\n\nimport { PageWrapper, ContentWrapper } from '../components'\n\nconst ListOptions = styled(AutoRow)`\n  height: 40px;\n  width: 100%;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  @media screen and (max-width: 640px) {\n    font-size: 1rem;\n  }\n`\n\nconst GridRow = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 6px;\n  align-items: start;\n  justify-content: space-between;\n`\n\nfunction GlobalPage() {\n  // get data for lists and totals\n  const allPairs = useAllPairData()\n  const allTokens = useAllTokenData()\n  const transactions = useGlobalTransactions()\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\n\n  // breakpoints\n  const below800 = useMedia('(max-width: 800px)')\n\n  // scrolling refs\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.8, '#44c4e2')} />\n      <ContentWrapper>\n        <div>\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: below800 ? '0' : '24px' }}>\n            <TYPE.largeHeader>{below800 ? 'Protocol Analytics' : 'HyperSwap Protocol Analytics'}</TYPE.largeHeader>\n            <Search />\n            <GlobalStats />\n          </AutoColumn>\n          {below800 && ( // mobile card\n            <Box mb={20}>\n              <Panel>\n                <Box>\n                  <AutoColumn gap=\"36px\">\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {formattedNum(oneDayVolumeUSD, true)}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{formattedPercent(volumeChangeUSD)}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Total Liquidity</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {formattedNum(totalLiquidityUSD, true)}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{formattedPercent(liquidityChangeUSD)}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </AutoColumn>\n                </Box>\n              </Panel>\n            </Box>\n          )}\n          {!below800 && (\n            <GridRow>\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n              <Panel style={{ height: '100%' }}>\n                <GlobalChart display=\"volume\" />\n              </Panel>\n            </GridRow>\n          )}\n          {below800 && (\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n            </AutoColumn>\n          )}\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1.125rem'}>Top Tokens</TYPE.main>\n              <CustomLink to={'/tokens'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <TopTokenList tokens={allTokens} />\n          </Panel>\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1rem'}>Top Pairs</TYPE.main>\n              <CustomLink to={'/pairs'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <PairList pairs={allPairs} />\n          </Panel>\n\n          <span>\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n              Transactions\n            </TYPE.main>\n          </span>\n          <Panel style={{ margin: '1rem 0' }}>\n            <TxnList transactions={transactions} />\n          </Panel>\n        </div>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(GlobalPage)\n","/workspace/algocloud-frontend/src/modules/shared/error/errors.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroyActions.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormActions.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/list/customerListActions.tsx",[],"/workspace/algocloud-frontend/src/modules/product/view/productViewActions.tsx",[],"/workspace/algocloud-frontend/src/modules/product/destroy/productDestroyActions.tsx",[],"/workspace/algocloud-frontend/src/modules/product/importer/productImporterActions.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/view/customerViewActions.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterActions.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroyActions.tsx",[],"/workspace/algocloud-frontend/src/modules/auditLog/auditLogExporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/auditLog/auditLogSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/auditLog/auditLogService.tsx",[],"/workspace/algocloud-frontend/src/view/menus.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/importer/importerReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/product/list/productListActions.tsx",[],"/workspace/algocloud-frontend/src/view/layout/styles/MenuWrapper.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/exporter/exporter.tsx",[],"/workspace/algocloud-frontend/src/view/shared/Avatar.tsx",[],"/workspace/algocloud-frontend/src/view/layout/styles/HeaderWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/layout/I18nSelect.tsx",[],"/workspace/algocloud-frontend/src/view/layout/styles/I18nFlagsWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/formErrors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/Theme/index.js",[],"/workspace/algocloud-frontend/src/view/customer/view/CustomerViewToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/customer/view/CustomerView.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/view/customerViewSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/importer/customerImporterFields.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/ImagesFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/importer/Importer.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/LocalLoader/index.js",["1794"],"import React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport logo1 from '../../assets/logo_white.png';\nimport logo2 from '../../assets/logo.png';\n\nconst rotate = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`\n\nconst Loader = styled.div`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  img {\n    animation: ${rotate} 2000ms linear infinite;\n  }\n  & > * {\n    width: 256px;\n  }\n  height: 100vh;\n`\n\nconst LocalLoader = ({ fill }) => {\n  const [darkMode] = useDarkModeManager()\n\n  return (\n    <Loader fill={fill}>\n      <img src={darkMode ? logo1 : logo2} alt=\"loading-icon\" />\n    </Loader>\n  )\n}\n\nexport default LocalLoader\n","/workspace/algocloud-frontend/src/view/shared/form/items/TextAreaFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/DatePickerFormItem.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/customerEnumerators.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/customerService.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/FormWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/RadioFormItem.tsx",[],"/workspace/algocloud-frontend/src/modules/product/productService.tsx",[],"/workspace/algocloud-frontend/src/view/customer/list/CustomerListToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/customer/list/CustomerListFilter.tsx",[],"/workspace/algocloud-frontend/src/view/customer/list/CustomerListTable.tsx",[],"/workspace/algocloud-frontend/src/view/product/list/ProductListToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/product/list/ProductListTable.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PinnedData/index.js",["1795","1796","1797","1798","1799","1800","1801"],"import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\nimport { Hover } from '..'\nimport TokenLogo from '../TokenLogo'\nimport AccountSearch from '../AccountSearch'\nimport { Bookmark, ChevronRight, X } from 'react-feather'\nimport { ButtonFaded } from '../ButtonStyled'\nimport FormattedName from '../FormattedName'\n\nconst RightColumn = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0px;\n  height: 100vh;\n  width: ${({ open }) => (open ? '160px' : '23px')};\n  padding: 1.25rem;\n  border-left: 1px solid #44c4e2;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 9999;\n  overflow: scroll;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst SavedButton = styled(RowBetween)`\n  padding-bottom: ${({ open }) => open && '20px'};\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg3};\n  margin-bottom: ${({ open }) => open && '1.25rem'};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ScrollableDiv = styled(AutoColumn)`\n  overflow: hidden;\n  padding-bottom: 60px;\n`\n\nconst StyledIcon = styled.div`\n  color: #44c4e2;\n`\n\nfunction PinnedData({ history, open, setSavedOpen }) {\n  const [savedPairs, , removePair] = useSavedPairs()\n  const [savedTokens, , removeToken] = useSavedTokens()\n\n  return !open ? (\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\n      <SavedButton open={open}>\n        <StyledIcon>\n          <Bookmark size={20} />\n        </StyledIcon>\n      </SavedButton>\n    </RightColumn>\n  ) : (\n    <RightColumn gap=\"1rem\" open={open}>\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\n        <RowFixed>\n          <StyledIcon>\n            <Bookmark size={16} />\n          </StyledIcon>\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\n        </RowFixed>\n        <StyledIcon>\n          <ChevronRight />\n        </StyledIcon>\n      </SavedButton>\n      <AccountSearch small={true} />\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\n        <AutoColumn gap={'12px'}>\n          <TYPE.main>Pinned Pairs</TYPE.main>\n          {Object.keys(savedPairs).filter(key => {\n            return !!savedPairs[key]\n          }).length > 0 ? (\n            Object.keys(savedPairs)\n              .filter(address => {\n                return !!savedPairs[address]\n              })\n              .map(address => {\n                const pair = savedPairs[address]\n                return (\n                  <RowBetween key={pair.address}>\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\n                      <RowFixed>\n                        <TYPE.header>\n                          <FormattedName\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\n                            maxCharacters={12}\n                            fontSize={'12px'}\n                          />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removePair(pair.address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\n          )}\n        </AutoColumn>\n        <ScrollableDiv gap={'12px'}>\n          <TYPE.main>Pinned Tokens</TYPE.main>\n          {Object.keys(savedTokens).filter(key => {\n            return !!savedTokens[key]\n          }).length > 0 ? (\n            Object.keys(savedTokens)\n              .filter(address => {\n                return !!savedTokens[address]\n              })\n              .map(address => {\n                const token = savedTokens[address]\n                return (\n                  <RowBetween key={address}>\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\n                      <RowFixed>\n                        <TokenLogo address={address} size={'14px'} />\n                        <TYPE.header ml={'6px'}>\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removeToken(address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\n          )}\n        </ScrollableDiv>\n      </AutoColumn>\n    </RightColumn>\n  )\n}\n\nexport default withRouter(PinnedData)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/SideNav/index.js",["1802"],"import React from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport Title from '../Title'\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\nimport { transparentize } from 'polished'\nimport { TYPE } from '../../Theme'\nimport { withRouter } from 'react-router-dom'\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\nimport Link from '../Link'\nimport { useSessionStart } from '../../contexts/Application'\n\nconst Wrapper = styled.div`\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\n  color: ${({ theme }) => theme.text1};\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\n  position: sticky;\n  top: 0px;\n  z-index: 9999;\n  box-sizing: border-box;\n  /* background-color: #1b1c22; */\n  background: linear-gradient(193.68deg, #191F35 22%, 'transparent' 50.69%);\n  border-right: 2px solid #44c4e2;\n  color: ${({ theme }) => theme.bg2};\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    position: relative;\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 1rem;\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: #44c4e2;\n  display: flex;\n  :hover {\n    opacity: 1;\n    color: #c7f2f9;\n  }\n  :active {\n    color: #c7f2f9;\n  }\n`\n\nconst DesktopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n`\n\nconst MobileWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  margin-right: 0.75rem;\n  font-size: 0.825rem;\n  font-weight: 500;\n  display: inline-box;\n  display: -webkit-inline-box;\n  opacity: 0.8;\n  :hover {\n    opacity: 1;\n    color: #c7f2f9;\n  }\n  a {\n    color: #c7f2f9;\n  }\n`\n\nconst Polling = styled.div`\n  position: fixed;\n  display: flex;\n  left: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: white;\n  opacity: 0.4;\n  transition: opacity 0.25s ease;\n  :hover {\n    opacity: 1;\n  }\n`\nconst PollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-right: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nfunction SideNav({ history }) {\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  const below1180 = useMedia('(max-width: 1180px)')\n\n  const seconds = useSessionStart()\n\n  return (\n    <Wrapper isMobile={below1080}>\n      {!below1080 ? (\n        <DesktopWrapper>\n          <AutoColumn gap=\"1rem\" style={{ marginLeft: '.75rem', marginTop: '1.5rem' }}>\n            <Title />\n            {!below1080 && (\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\n                <BasicLink to=\"/home\">\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\n                    Overview\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/tokens\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\n                        history.location.pathname.split('/')[1] === 'token') ??\n                      undefined\n                    }\n                  >\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\n                    Tokens\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/pairs\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\n                        history.location.pathname.split('/')[1] === 'pair') ??\n                      undefined\n                    }\n                  >\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\n                    Pairs\n                  </Option>\n                </BasicLink>\n\n                <BasicLink to=\"/accounts\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\n                        history.location.pathname.split('/')[1] === 'account') ??\n                      undefined\n                    }\n                  >\n                    <List size={20} style={{ marginRight: '.75rem' }} />\n                    Accounts\n                  </Option>\n                </BasicLink>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\n            <HeaderText>\n              <Link href=\"https://hyperjump.fi\" target=\"_blank\">\n                HyperJump.fi\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://swap.hyperjump.fi\" target=\"_blank\">\n                HyperSwap\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://t.me/hyperjumpbsc\" target=\"_blank\">\n                Telegram\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://discord.com/invite/PDHCV6rWru\" target=\"_blank\">\n                Discord\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://twitter.com/HyperJumpBSC\" target=\"_blank\">\n                Twitter\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://dappradar.com/binance-smart-chain/defi/thugs-fi-traphouse\" target=\"_blank\">\n                DappRadar\n              </Link>\n            </HeaderText>\n          </AutoColumn>\n          {!below1180 && (\n            <Polling style={{ marginLeft: '.5rem' }}>\n              <PollingDot />\n              <a href=\"/\" style={{ color: 'white' }}>\n                <TYPE.small color={'white'}>\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\n                </TYPE.small>\n              </a>\n            </Polling>\n          )}\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <Title />\n        </MobileWrapper>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default withRouter(SideNav)\n","/workspace/algocloud-frontend/src/view/product/list/ProductListFilter.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/list/tenantListActions.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/list/customerListExporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/product/importer/productImporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/exporter/exporterRenders.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/importer/importerActions.tsx",[],"/workspace/algocloud-frontend/src/modules/product/list/productListExporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/exporter/exporterSchema.tsx",[],"/workspace/algocloud-frontend/src/modules/product/list/productListSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/importer/importerStatuses.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/excel/excel.tsx",[],"/workspace/algocloud-frontend/src/modules/product/importer/productImporterSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/list/customerListSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/Toolbar.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/ViewWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/index.js",[],"/workspace/algocloud-frontend/src/modules/customer/destroy/customerDestroySelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/customer/customerSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/shared/view/TextViewItem.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/importer/importerSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/shared/modals/ConfirmModal.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/yup/yupImporterSchemas.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Link/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Panel/index.js",[],"/workspace/algocloud-frontend/src/view/shared/uploaders/ImagesUploader.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/GlobalStats/index.js",["1803","1804","1805","1806"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RowFixed, RowBetween } from '../Row'\nimport { useMedia } from 'react-use'\nimport { useGlobalData, useBnbPrice } from '../../contexts/GlobalData'\nimport { formattedNum, localNumber } from '../../utils'\n\nimport UniPrice from '../UniPrice'\nimport { TYPE } from '../../Theme'\n\nconst Header = styled.div`\n  width: 100%;\n  position: sticky;\n  top: 0;\n`\n\nconst Medium = styled.span`\n  font-weight: 500;\n`\n\nexport default function GlobalStats() {\n  const below1295 = useMedia('(max-width: 1295px)')\n  const below1180 = useMedia('(max-width: 1180px)')\n  const below1024 = useMedia('(max-width: 1024px)')\n  const below400 = useMedia('(max-width: 400px)')\n  const below816 = useMedia('(max-width: 816px)')\n\n  const [showPriceCard, setShowPriceCard] = useState(false)\n\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\n  const [bnbPrice] = useBnbPrice()\n  const formattedBnbPrice = bnbPrice ? formattedNum(bnbPrice, true) : '-'\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.004, true) : ''\n\n  return (\n    <Header>\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.5rem' }}>\n        <RowFixed>\n          {!below400 && (\n            <TYPE.main\n              mr={'1rem'}\n              onMouseEnter={() => {\n                setShowPriceCard(true)\n              }}\n              onMouseLeave={() => {\n                setShowPriceCard(false)\n              }}\n              style={{ position: 'relative' }}\n            >\n              BNB Price: <Medium>{formattedBnbPrice}</Medium>\n              {showPriceCard && <UniPrice />}\n            </TYPE.main>\n          )}\n\n          {!below1180 && (\n            <TYPE.main mr={'1rem'}>\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1024 && (\n            <TYPE.main mr={'1rem'}>\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1295 && (\n            <TYPE.main mr={'1rem'}>\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\n            </TYPE.main>\n          )}\n        </RowFixed>\n      </RowBetween>\n    </Header>\n  )\n}\n","/workspace/algocloud-frontend/src/view/shared/importer/ImporterToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/shared/importer/ImporterStatus.tsx",[],"/workspace/algocloud-frontend/src/view/shared/importer/ImporterForm.tsx",[],"/workspace/algocloud-frontend/src/view/shared/importer/ImporterList.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Search/index.js",["1807","1808","1809","1810","1811"],"import React, { useState, useEffect, useMemo, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowFixed } from '../Row'\nimport TokenLogo from '../TokenLogo'\nimport { Search as SearchIcon, X } from 'react-feather'\nimport { BasicLink } from '../Link'\n\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { useMedia } from 'react-use'\nimport { useAllPairsInStreetswap, useAllTokensInStreetswap } from '../../contexts/GlobalData'\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\n\nimport { transparentize } from 'polished'\nimport { client } from '../../apollo/client'\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\nconst Container = styled.div`\n  height: 48px;\n  z-index: 30;\n  position: relative;\n  border: 1px solid #44c4e2;\n  border-radius: 12px;\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 12px 16px;\n  border-radius: 12px;\n  background-color: rgba(0,0,0,0.5);\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\n  z-index: 9999;\n  width: 100%;\n  min-width: 300px;\n  box-sizing: border-box;\n  box-shadow: ${({ open, small }) =>\n    !open && !small\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n      : 'none'};\n  @media screen and (max-width: 500px) {\n    background: ${({ theme }) => transparentize(0.4, theme.bg1)};\n    box-shadow: ${({ open }) =>\n      !open\n        ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n        : 'none'};\n  }\n`\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: ${({ theme }) => theme.bg5};\n  border: none;\n  outline: none;\n  width: 100%;\n  color: ${({ theme }) => theme.text1};\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.yellow2};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst SearchIconLarge = styled(SearchIcon)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  pointer-events: none;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst CloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text3};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 540px;\n  overflow: scroll;\n  left: 0;\n  padding-bottom: 20px;\n  background: rgba(0,0,0,0.95);\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n`\n\nconst MenuItem = styled(Row)`\n  padding: 1rem;\n  font-size: 0.85rem;\n  & > * {\n    margin-right: 6px;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst Heading = styled(Row)`\n  padding: 1rem;\n  display: ${({ hide = false }) => hide && 'none'};\n`\n\nconst Gray = styled.span`\n  color: #888d9b;\n`\n\nconst Blue = styled.span`\n  color: #2172e5;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Search = ({ small = false }) => {\n  let allTokens = useAllTokensInStreetswap()\n  const allTokenData = useAllTokenData()\n\n  let allPairs = useAllPairsInStreetswap()\n  const allPairData = useAllPairData()\n\n  const [showMenu, toggleMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const [, toggleShadow] = useState(false)\n  const [, toggleBottomShadow] = useState(false)\n\n  // fetch new data on tokens and pairs if needed\n  useTokenData(value)\n  usePairData(value)\n\n  const below700 = useMedia('(max-width: 700px)')\n  const below470 = useMedia('(max-width: 470px)')\n  const below410 = useMedia('(max-width: 410px)')\n\n  useEffect(() => {\n    if (value !== '') {\n      toggleMenu(true)\n    } else {\n      toggleMenu(false)\n    }\n  }, [value])\n\n  const [searchedTokens, setSearchedTokens] = useState([])\n  const [searchedPairs, setSearchedPairs] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (value?.length > 0) {\n          let tokens = await client.query({\n            variables: {\n              value: value ? value.toUpperCase() : '',\n              id: value\n            },\n            query: TOKEN_SEARCH\n          })\n\n          let pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map(t => t.id),\n              id: value\n            }\n          })\n          setSearchedPairs(pairs.data.as0.concat(pairs.data.as1).concat(pairs.data.asAddress))\n          let foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\n          setSearchedTokens(foundTokens)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchData()\n  }, [value])\n\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  }\n\n  // add the searched tokens to the list if now found yet\n  allTokens = allTokens.concat(\n    searchedTokens.filter(searchedToken => {\n      let included = false\n      allTokens.map(token => {\n        if (token.id === searchedToken.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniqueTokens = []\n  let found = {}\n  allTokens &&\n    allTokens.map(token => {\n      if (!found[token.id]) {\n        found[token.id] = true\n        uniqueTokens.push(token)\n      }\n      return true\n    })\n\n  allPairs = allPairs.concat(\n    searchedPairs.filter(searchedPair => {\n      let included = false\n      allPairs.map(pair => {\n        if (pair.id === searchedPair.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniquePairs = []\n  let pairsFound = {}\n  allPairs &&\n    allPairs.map(pair => {\n      if (!pairsFound[pair.id]) {\n        pairsFound[pair.id] = true\n        uniquePairs.push(pair)\n      }\n      return true\n    })\n\n  const filteredTokenList = useMemo(() => {\n    return uniqueTokens\n      ? uniqueTokens\n          .sort((a, b) => {\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(a.id)) {\n              return 1\n            }\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(b.id)) {\n              return -1\n            }\n            const tokenA = allTokenData[a.id]\n            const tokenB = allTokenData[b.id]\n            if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\n            }\n            if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\n              return -1\n            }\n            if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\n            }\n            return 1\n          })\n          .filter(token => {\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(token.id)) {\n              return false\n            }\n            const regexMatches = Object.keys(token).map(tokenEntryKey => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (tokenEntryKey === 'id' && isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'symbol' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'name' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              return false\n            })\n            return regexMatches.some(m => m)\n          })\n      : []\n  }, [allTokenData, uniqueTokens, value])\n\n  const filteredPairList = useMemo(() => {\n    return uniquePairs\n      ? uniquePairs\n          .sort((a, b) => {\n            const pairA = allPairData[a.id]\n            const pairB = allPairData[b.id]\n            if (pairA?.trackedReserveBNB && pairB?.trackedReserveBNB) {\n              return parseFloat(pairA.trackedReserveBNB) > parseFloat(pairB.trackedReserveBNB) ? -1 : 1\n            }\n            if (pairA?.trackedReserveBNB && !pairB?.trackedReserveBNB) {\n              return -1\n            }\n            if (!pairA?.trackedReserveBNB && pairB?.trackedReserveBNB) {\n              return 1\n            }\n            return 0\n          })\n          .filter(pair => {\n            if (PAIR_BLACKLIST.includes(pair.id)) {\n              return false\n            }\n            if (value && value.includes(' ')) {\n              const pairA = value.split(' ')[0]?.toUpperCase()\n              const pairB = value.split(' ')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            if (value && value.includes('-')) {\n              const pairA = value.split('-')[0]?.toUpperCase()\n              const pairB = value.split('-')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            const regexMatches = Object.keys(pair).map(field => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (field === 'id' && isAddress) {\n                return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (field === 'token0') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              if (field === 'token1') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              return false\n            })\n            return regexMatches.some(m => m)\n          })\n      : []\n  }, [allPairData, uniquePairs, value])\n\n  useEffect(() => {\n    if (Object.keys(filteredTokenList).length > 2) {\n      toggleShadow(true)\n    } else {\n      toggleShadow(false)\n    }\n  }, [filteredTokenList])\n\n  useEffect(() => {\n    if (Object.keys(filteredPairList).length > 2) {\n      toggleBottomShadow(true)\n    } else {\n      toggleBottomShadow(false)\n    }\n  }, [filteredPairList])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [pairsShown, setPairsShown] = useState(3)\n\n  function onDismiss() {\n    setPairsShown(3)\n    setTokensShown(3)\n    toggleMenu(false)\n    setValue('')\n  }\n\n  // refs to detect clicks outside modal\n  const wrapperRef = useRef()\n  const menuRef = useRef()\n\n  const handleClick = e => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3)\n      setTokensShown(3)\n      toggleMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  return (\n    <Container small={small}>\n      <Wrapper open={showMenu} shadow={true} small={small}>\n        <Input\n          large={!small}\n          type={'text'}\n          ref={wrapperRef}\n          placeholder={\n            small\n              ? ''\n              : below410\n              ? 'Search...'\n              : below470\n              ? 'Search HyperSwap...'\n              : below700\n              ? 'Search pairs and tokens...'\n              : 'Search HyperSwap pairs and tokens...'\n          }\n          value={value}\n          onChange={e => {\n            setValue(e.target.value)\n          }}\n          onFocus={() => {\n            if (!showMenu) {\n              toggleMenu(true)\n            }\n          }}\n        />\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\n      </Wrapper>\n      <Menu hide={!showMenu} ref={menuRef}>\n        <Heading>\n          <Gray>Pairs</Gray>\n        </Heading>\n        <div>\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredPairList &&\n            filteredPairList.slice(0, pairsShown).map(pair => {\n              if (pair?.token0?.id === '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c') {\n                pair.token0.name = 'BNB (Wrapped)'\n                pair.token0.symbol = 'BNB'\n              }\n              if (pair?.token1.id === '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c') {\n                pair.token1.name = 'BNB (Wrapped)'\n                pair.token1.symbol = 'BNB'\n              }\n              return (\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\n                  <MenuItem>\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\n                    <TYPE.body style={{ marginLeft: '10px' }}>\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\n                    </TYPE.body>\n                  </MenuItem>\n                </BasicLink>\n              )\n            })}\n          <Heading\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\n          >\n            <Blue\n              onClick={() => {\n                setPairsShown(pairsShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n        <Heading>\n          <Gray>Tokens</Gray>\n        </Heading>\n        <div>\n          {Object.keys(filteredTokenList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredTokenList.slice(0, tokensShown).map(token => {\n            return (\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\n                <MenuItem>\n                  <RowFixed>\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\n                  </RowFixed>\n                </MenuItem>\n              </BasicLink>\n            )\n          })}\n\n          <Heading\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\n          >\n            <Blue\n              onClick={() => {\n                setTokensShown(tokensShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n      </Menu>\n    </Container>\n  )\n}\n\nexport default Search\n","/workspace/algocloud-frontend/src/view/shared/form/items/DatePickerRangeFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/TableWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/InputRangeFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/FilterWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/shared/table/Pagination.tsx",[],"/workspace/algocloud-frontend/src/view/shared/table/ImagesListView.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/yup/yupFilterSchemas.tsx",[],"/workspace/algocloud-frontend/src/modules/shared/filter/filterRenders.tsx",[],"/workspace/algocloud-frontend/src/view/shared/filter/FilterPreview.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/GlobalChart/index.js",["1812","1813","1814"],"import React, { useState, useMemo, useEffect, useRef } from 'react'\nimport { ResponsiveContainer } from 'recharts'\nimport { timeframeOptions } from '../../constants'\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\nimport { useMedia } from 'react-use'\nimport DropdownSelect from '../DropdownSelect'\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\nimport { RowFixed } from '../Row'\nimport { OptionButton } from '../ButtonStyled'\nimport { getTimeframe } from '../../utils'\nimport { TYPE } from '../../Theme'\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity'\n}\n\nconst VOLUME_WINDOW = {\n  WEEKLY: 'WEEKLY',\n  DAYS: 'DAYS'\n}\nconst GlobalChart = ({ display }) => {\n  // chart options\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\n\n  // time window and window size for chart\n  const timeWindow = timeframeOptions.ALL_TIME\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\n\n  // global historical data\n  const [dailyData, weeklyData] = useGlobalChartData()\n  const {\n    totalLiquidityUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    liquidityChangeUSD,\n    oneWeekVolume,\n    weeklyVolumeChange\n  } = useGlobalData()\n\n  // based on window, get starttim\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const chartDataFiltered = useMemo(() => {\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\n    return (\n      currentData &&\n      Object.keys(currentData)\n        ?.map(key => {\n          let item = currentData[key]\n          if (item.date > utcStartTime) {\n            return item\n          } else {\n            return\n          }\n        })\n        .filter(item => {\n          return !!item\n        })\n    )\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\n  const below800 = useMedia('(max-width: 800px)')\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return chartDataFiltered ? (\n    <>\n      {below800 && (\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#44c4e2'} />\n      )}\n\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\n          <TradingViewChart\n            data={dailyData}\n            base={totalLiquidityUSD}\n            baseChange={liquidityChangeUSD}\n            title=\"Liquidity\"\n            field=\"totalLiquidityUSD\"\n            width={width}\n            type={CHART_TYPES.AREA}\n          />\n        </ResponsiveContainer>\n      )}\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={60 / 28}>\n          <TradingViewChart\n            data={chartDataFiltered}\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\n            width={width}\n            type={CHART_TYPES.BAR}\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\n          />\n        </ResponsiveContainer>\n      )}\n      {display === 'volume' && (\n        <RowFixed style={{ bottom: '70px', position: 'absolute', left: '20px', zIndex: 10 }}>\n          <OptionButton\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\n          >\n            <TYPE.body>D</TYPE.body>\n          </OptionButton>\n          <OptionButton\n            style={{ marginLeft: '4px' }}\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\n          >\n            <TYPE.body>W</TYPE.body>\n          </OptionButton>\n        </RowFixed>\n      )}\n    </>\n  ) : (\n    ''\n  )\n}\n\nexport default GlobalChart\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenList/index.js",["1815"],"import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { Box, Flex, Text } from 'rebass'\nimport TokenLogo from '../TokenLogo'\nimport { CustomLink } from '../Link'\nimport Row from '../Row'\nimport { Divider } from '..'\n\nimport { formattedNum, formattedPercent } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { withRouter } from 'react-router-dom'\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 680px) {\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol ';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    display: grid;\n    grid-gap: 0.5em;\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol price change';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  color: ${({ theme }) => theme.text1};\n\n  @media screen and (max-width: 640px) {\n    font-size: 0.85rem;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 'totalLiquidityUSD',\n  VOL: 'oneDayVolumeUSD',\n  SYMBOL: 'symbol',\n  NAME: 'name',\n  PRICE: 'priceUSD',\n  CHANGE: 'priceChangeUSD'\n}\n\n// @TODO rework into virtualized list\nfunction TopTokenList({ tokens, itemMax = 10 }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below680 = useMedia('(max-width: 680px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [tokens])\n\n  const formattedTokens = useMemo(() => {\n    return (\n      tokens &&\n      Object.keys(tokens)\n        .filter(key => {\n          return !OVERVIEW_TOKEN_BLACKLIST.includes(key)\n        })\n        .map(key => tokens[key])\n    )\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens && formattedTokens) {\n      let extraPages = 1\n      if (formattedTokens.length % itemMax === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\n    }\n  }, [tokens, formattedTokens, itemMax])\n\n  const filteredList = useMemo(() => {\n    return (\n      formattedTokens &&\n      formattedTokens\n        .sort((a, b) => {\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n          }\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n            ? (sortDirection ? -1 : 1) * 1\n            : (sortDirection ? -1 : 1) * -1\n        })\n        .slice(itemMax * (page - 1), page * itemMax)\n    )\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\n\n  const ListItem = ({ item, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} focus={true}>\n        <DataText area=\"name\" fontWeight=\"500\">\n          <Row>\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\n            <TokenLogo address={item.id} />\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\n              <FormattedName\n                text={below680 ? item.symbol : item.name}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </Row>\n        </DataText>\n        {!below680 && (\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\n            <FormattedName text={item.symbol} maxCharacters={5} />\n          </DataText>\n        )}\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\n        {!below1080 && (\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\n            {formattedNum(item.priceUSD, true)}\n          </DataText>\n        )}\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\n      </DashGrid>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"text\"\n            area=\"name\"\n            fontWeight=\"500\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.NAME)\n              setSortDirection(sortedColumn !== SORT_FIELD.NAMe ? true : !sortDirection)\n            }}\n          >\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below680 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"symbol\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.SYMBOL)\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\n              }}\n            >\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"liq\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"price\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.PRICE)\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\n              }}\n            >\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"change\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.CHANGE)\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\n              }}\n            >\n              Price Change (24hrs)\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {filteredList &&\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })}\n      </List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(TopTokenList)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TxnList/index.js",["1816","1817"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { formatTime, formattedNum, urls } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { useCurrentCurrency } from '../../contexts/Application'\nimport { RowFixed, RowBetween } from '../Row'\n\nimport LocalLoader from '../LocalLoader'\nimport { Box, Flex, Text } from 'rebass'\nimport Link from '../Link'\nimport { Divider, EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'txn value time';\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 500px) {\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 780px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther time';\n\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther account time';\n  }\n`\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  user-select: none;\n  text-align: end;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: right;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 40em) {\n    font-size: 0.85rem;\n  }\n`\n\nconst SortText = styled.button`\n  cursor: pointer;\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'amountUSD',\n  AMOUNT0: 'token0Amount',\n  AMOUNT1: 'token1Amount',\n  TIMESTAMP: 'timestamp'\n}\n\nconst TXN_TYPE = {\n  ALL: 'All',\n  SWAP: 'Swaps',\n  ADD: 'Adds',\n  REMOVE: 'Removes'\n}\n\nconst ITEMS_PER_PAGE = 10\n\nfunction getTransactionType(event, symbol0, symbol1) {\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\n  switch (event) {\n    case TXN_TYPE.ADD:\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.REMOVE:\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.SWAP:\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\n    default:\n      return ''\n  }\n}\n\n// @TODO rework into virtualized list\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\n  const [filteredItems, setFilteredItems] = useState()\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\n\n  const [currency] = useCurrentCurrency()\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [transactions])\n\n  // parse the txns and format for UI\n  useEffect(() => {\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\n      let newTxns = []\n      if (transactions.mints.length > 0) {\n        transactions.mints.map(mint => {\n          let newTxn = {}\n          newTxn.hash = mint.transaction.id\n          newTxn.timestamp = mint.transaction.timestamp\n          newTxn.type = TXN_TYPE.ADD\n          newTxn.token0Amount = mint.amount0\n          newTxn.token1Amount = mint.amount1\n          newTxn.account = mint.to\n          newTxn.token0Symbol = mint.pair.token0.symbol\n          newTxn.token1Symbol = mint.pair.token1.symbol\n          newTxn.amountUSD = mint.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.burns.length > 0) {\n        transactions.burns.map(burn => {\n          let newTxn = {}\n          newTxn.hash = burn.transaction.id\n          newTxn.timestamp = burn.transaction.timestamp\n          newTxn.type = TXN_TYPE.REMOVE\n          newTxn.token0Amount = burn.amount0\n          newTxn.token1Amount = burn.amount1\n          newTxn.account = burn.sender\n          newTxn.token0Symbol = burn.pair.token0.symbol\n          newTxn.token1Symbol = burn.pair.token1.symbol\n          newTxn.amountUSD = burn.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.swaps.length > 0) {\n        transactions.swaps.map(swap => {\n          const netToken0 = swap.amount0In - swap.amount0Out\n          const netToken1 = swap.amount1In - swap.amount1Out\n\n          let newTxn = {}\n\n          if (netToken0 < 0) {\n            newTxn.token0Symbol = swap.pair.token0.symbol\n            newTxn.token1Symbol = swap.pair.token1.symbol\n            newTxn.token0Amount = Math.abs(netToken0)\n            newTxn.token1Amount = Math.abs(netToken1)\n          } else if (netToken1 < 0) {\n            newTxn.token0Symbol = swap.pair.token1.symbol\n            newTxn.token1Symbol = swap.pair.token0.symbol\n            newTxn.token0Amount = Math.abs(netToken1)\n            newTxn.token1Amount = Math.abs(netToken0)\n          }\n\n          newTxn.hash = swap.transaction.id\n          newTxn.timestamp = swap.transaction.timestamp\n          newTxn.type = TXN_TYPE.SWAP\n\n          newTxn.amountUSD = swap.amountUSD\n          newTxn.account = swap.to\n          return newTxns.push(newTxn)\n        })\n      }\n\n      const filtered = newTxns.filter(item => {\n        if (txFilter !== TXN_TYPE.ALL) {\n          return item.type === txFilter\n        }\n        return true\n      })\n      setFilteredItems(filtered)\n      let extraPages = 1\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      if (filtered.length === 0) {\n        setMaxPage(1)\n      } else {\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\n      }\n    }\n  }, [transactions, txFilter])\n\n  useEffect(() => {\n    setPage(1)\n  }, [txFilter])\n\n  const filteredList =\n    filteredItems &&\n    filteredItems\n      .sort((a, b) => {\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below780 = useMedia('(max-width: 780px)')\n\n  const ListItem = ({ item }) => {\n    if (item.token0Symbol === 'WBNB') {\n      item.token0Symbol = 'BNB'\n    }\n\n    if (item.token1Symbol === 'WBNB') {\n      item.token1Symbol = 'BNB'\n    }\n\n    return (\n      <DashGrid style={{ height: '48px' }}>\n        <DataText area=\"txn\" fontWeight=\"500\">\n          <Link color={({ theme }) => theme.blue} external href={urls.showTransaction(item.hash)}>\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\n          </Link>\n        </DataText>\n        <DataText area=\"value\">\n          {currency === 'BNB' ? 'B ' + formattedNum(item.valueBNB) : formattedNum(item.amountUSD, true)}\n        </DataText>\n        {!below780 && (\n          <>\n            <DataText area=\"amountOther\">\n              {formattedNum(item.token1Amount) + ' '}{' '}\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n            <DataText area=\"amountToken\">\n              {formattedNum(item.token0Amount) + ' '}{' '}\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n          </>\n        )}\n        {!below1080 && (\n          <DataText area=\"account\">\n            <Link color={color} external href={'https://bscscan.com/address/' + item.account}>\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\n            </Link>\n          </DataText>\n        )}\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  return (\n    <>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n        {below780 ? (\n          <RowBetween area=\"txn\">\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\n          </RowBetween>\n        ) : (\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ALL)\n              }}\n              active={txFilter === TXN_TYPE.ALL}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.SWAP)\n              }}\n              active={txFilter === TXN_TYPE.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ADD)\n              }}\n              active={txFilter === TXN_TYPE.ADD}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.REMOVE)\n              }}\n              active={txFilter === TXN_TYPE.REMOVE}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n        )}\n\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"textDim\"\n            area=\"value\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below780 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"amountToken\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.AMOUNT0)\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\n              }}\n            >\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        <>\n          {!below780 && (\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area=\"amountOther\"\n                color=\"textDim\"\n                onClick={() => {\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\n                }}\n              >\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          )}\n          {!below1080 && (\n            <Flex alignItems=\"center\">\n              <TYPE.body area=\"account\">Account</TYPE.body>\n            </Flex>\n          )}\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"time\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\n              }}\n            >\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        </>\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {!filteredList ? (\n          <LocalLoader />\n        ) : filteredList.length === 0 ? (\n          <EmptyCard>No recent transactions found.</EmptyCard>\n        ) : (\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={e => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={e => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </>\n  )\n}\n\nexport default TxnList\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairList/index.js",["1818","1819"],"import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { PAIR_BLACKLIST } from '../../constants'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5\n}\n\nconst FIELD_TO_VALUE = {\n  [SORT_FIELD.LIQ]: 'trackedReserveUSD', // sort with tracked volume only\n  [SORT_FIELD.VOL]: 'oneDayVolumeUSD',\n  [SORT_FIELD.VOL_7DAYS]: 'oneWeekVolumeUSD',\n  [SORT_FIELD.FEES]: 'oneDayVolumeUSD'\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(pairData.reserveUSD, true)\n      const volume = formattedNum(pairData.oneDayVolumeUSD, true)\n      const apy = formattedPercent((pairData.oneDayVolumeUSD * 0.003 * 365 * 100) / pairData.reserveUSD)\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo\n              size={below600 ? 16 : 20}\n              a0={pairData.token0.id}\n              a1={pairData.token1.id}\n              margin={!below740}\n            />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={pairData.token0.symbol + '-' + pairData.token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{liquidity}</DataText>\n          <DataText area=\"vol\">{volume}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{formattedNum(pairData.oneWeekVolumeUSD, true)}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{formattedNum(pairData.oneDayVolumeUSD * 0.003, true)}</DataText>}\n          {!below1080 && <DataText area=\"apy\">{apy}</DataText>}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE[sortedColumn]]) > parseFloat(pairB[FIELD_TO_VALUE[sortedColumn]])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .filter(pairAddress => {\n        return !PAIR_BLACKLIST.includes(pairAddress)\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={e => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={e => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={e => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Column/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Row/index.js",[],"/workspace/algocloud-frontend/src/modules/tenant/list/tenantListSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/FormattedName/index.js",[],"/workspace/algocloud-frontend/src/modules/shared/importer/importer.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Warning/index.js",[],"/workspace/algocloud-frontend/src/view/shared/table/TableColumnHeader.tsx",[],"/workspace/algocloud-frontend/src/modules/product/destroy/productDestroySelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/product/productSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Copy/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenChart/index.js",[],"/workspace/algocloud-frontend/src/view/shared/form/items/SelectFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/hooks/index.ts",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Title/index.js",[],"/workspace/algocloud-frontend/src/view/shared/importer/ImporterRowStatus.tsx",[],"/workspace/algocloud-frontend/src/view/shared/modals/ImageModal.tsx",[],"/workspace/algocloud-frontend/src/view/shared/styles/ImagesUploaderWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/product/view/ProductViewToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/product/view/ProductView.tsx",[],"/workspace/algocloud-frontend/src/modules/product/view/productViewSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/ButtonStyled/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/AccountSearch/index.js",["1820","1821","1822","1823","1824"],"import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\nimport { AutoRow, RowBetween } from '../Row'\nimport { isAddress } from '../../utils'\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { Hover, StyledIcon } from '..'\nimport Panel from '../Panel'\nimport { Divider } from '..'\nimport { Flex } from 'rebass'\n\nimport { X } from 'react-feather'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  border-radius: 12px;\n`\n\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 12px 16px;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: rgba(0,0,0,0.5);\n  font-size: 16px;\n  margin-right: 1rem;\n  border: 1px solid #44c4e2;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst AccountLink = styled.span`\n  display: flex;\n  cursor: pointer;\n  color: ${({ theme }) => theme.link};\n  font-size: 14px;\n  font-weight: 500;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'account';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n`\n\nfunction AccountSearch({ history, small }) {\n  const [accountValue, setAccountValue] = useState()\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n\n  function handleAccountSearch() {\n    if (isAddress(accountValue)) {\n      history.push('/account/' + accountValue)\n      if (!savedAccounts.includes(accountValue)) {\n        addAccount(accountValue)\n      }\n    }\n  }\n\n  return (\n    <AutoColumn gap={'1rem'}>\n      {!small && (\n        <>\n          <AutoRow>\n            <Wrapper>\n              <Input\n                placeholder=\"0x...\"\n                onChange={e => {\n                  setAccountValue(e.target.value)\n                }}\n              />\n            </Wrapper>\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\n          </AutoRow>\n        </>\n      )}\n\n      <AutoColumn gap={'12px'}>\n        {!small && (\n          <Panel>\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\n            </DashGrid>\n            <Divider />\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map(account => {\n                return (\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\n                    <Flex\n                      area=\"account\"\n                      justifyContent=\"space-between\"\n                      onClick={() => history.push('/account/' + account)}\n                    >\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      <Hover onClick={() => removeAccount(account)}>\n                        <StyledIcon>\n                          <X size={16} />\n                        </StyledIcon>\n                      </Hover>\n                    </Flex>\n                  </DashGrid>\n                )\n              })\n            ) : (\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\n            )}\n          </Panel>\n        )}\n\n        {small && (\n          <>\n            <TYPE.main>{'Accounts'}</TYPE.main>\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map(account => {\n                return (\n                  <RowBetween key={account}>\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\n                      {small ? (\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n                      ) : (\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      )}\n                    </ButtonFaded>\n                    <Hover onClick={() => removeAccount(account)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n            ) : (\n              <TYPE.light>No pinned wallets</TYPE.light>\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n\nexport default withRouter(AccountSearch)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TokenLogo/index.js",[],"/workspace/algocloud-frontend/src/modules/shared/fileUpload/fileUploader.tsx",[],"/workspace/algocloud-frontend/src/view/order/list/OrderListTable.tsx",[],"/workspace/algocloud-frontend/src/view/order/list/OrderListToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/shared/table/styles/PaginationWrapper.tsx",[],"/workspace/algocloud-frontend/src/view/order/list/OrderListFilter.tsx",[],"/workspace/algocloud-frontend/src/view/order/form/OrderForm.tsx",[],"/workspace/algocloud-frontend/src/view/order/view/OrderViewToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/order/view/OrderView.tsx",[],"/workspace/algocloud-frontend/src/modules/order/form/orderFormSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/order/form/orderFormActions.tsx",[],"/workspace/algocloud-frontend/src/modules/order/view/orderViewActions.tsx",[],"/workspace/algocloud-frontend/src/modules/order/view/orderViewSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/DoubleLogo/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PositionList/index.js",["1825","1826","1827","1828","1829","1830","1831","1832","1833","1834"],"import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useBnbPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name thugswap return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name thugswap return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name thugswap return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name thugswap';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  THUGSWAP_RETURN: 'THUGSWAP_RETURN'\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [bnbPrice] = useBnbPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.liquidityTokenBalance / position.pair.totalSupply\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={position.pair.token0.id} a1={position.pair.token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName\n                  text={position.pair.token0.symbol + '-' + position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link\n                external\n                href={getPoolLink(position.pair.token0.id, position.pair.token1.id)}\n                style={{ marginRight: '.5rem' }}\n              >\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(position.pair.token0.id, position.pair.token1.id, true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"thugswap\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token0.derivedBNB)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token0.derivedBNB) * bnbPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token1.derivedBNB)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token1.derivedBNB) * bnbPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.THUGSWAP_RETURN) {\n          return p0?.thugswap?.return > p1?.thugswap?.return ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 = (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 = (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"thugswap\"\n            onClick={e => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.THUGSWAP_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.THUGSWAP_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.THUGSWAP_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairReturnsChart/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/UserChart/index.js",["1835"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserLiquidityChart } from '../../contexts/User'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { TYPE } from '../../Theme'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 390px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst UserChart = ({ account }) => {\n  const chartData = useUserLiquidityChart(account)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const below600 = useMedia('(max-width: 600px)')\n  const above1600 = useMedia('(min-width: 1600px)')\n\n  const domain = [dataMin => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#44c4e2'} />\n        </RowBetween>\n      ) : (\n        <RowBetween mb={40}>\n          <AutoRow gap=\"10px\">\n            <TYPE.main>Liquidity Value</TYPE.main>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartData ? (\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={'#44c4e2'} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={'#44c4e2'} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={0}\n              tickFormatter={tick => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={domain}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={tick => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={6}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={val => formattedNum(val, true)}\n              labelFormatter={label => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: '#44c4e2',\n                color: 'black'\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'valueUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, '#FFFA6D')}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      ) : (\n        <LocalLoader />\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default UserChart\n","/workspace/algocloud-frontend/src/modules/shared/importer/importerSchema.tsx",[],"/workspace/algocloud-frontend/src/modules/order/importer/orderImporterSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/order/importer/orderImporterFields.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/UniPrice/index.js",["1836","1837","1838","1839","1840","1841"],"import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport Panel from '../Panel'\nimport { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\nimport { TYPE } from '../../Theme'\nimport { usePairData } from '../../contexts/PairData'\nimport { formattedNum } from '../../utils'\n\nconst PriceCard = styled(Panel)`\n  position: absolute;\n  right: -220px;\n  width: 220px;\n  top: -20px;\n  z-index: 9999;\n  height: fit-content;\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nfunction formatPercent(rawPercent) {\n  if (rawPercent < 0.01) {\n    return '<1%'\n  } else return parseFloat(rawPercent * 100).toFixed(0) + '%'\n}\n\nexport default function UniPrice() {\n  const daiPair = usePairData('0xed8ecb790be568461d85cf82c386e51124e46a52')\n  const busdPair = usePairData('0xf2e4e3f9b58b3edac88ad11d689a23f3119a782d')\n  const usdtPair = usePairData('0x0d29724d1834fc65869812bae5d63dce8acb7921')\n\n  const totalLiquidity = useMemo(() => {\n    return daiPair && busdPair && usdtPair\n      ? daiPair.trackedReserveUSD + busdPair.trackedReserveUSD + usdtPair.trackedReserveUSD\n      : 0\n  }, [daiPair, busdPair, usdtPair])\n\n  const daiPerBnb = daiPair ? parseFloat(daiPair.token0Price).toFixed(2) : '-'\n  const busdPerBnb = busdPair ? parseFloat(busdPair.token1Price).toFixed(2) : '-'\n  const usdtPerBnb = usdtPair ? parseFloat(usdtPair.token0Price).toFixed(2) : '-'\n\n  return (\n    <PriceCard>\n      <AutoColumn gap=\"10px\">\n        <RowFixed>\n          <TYPE.main>DAI/BNB: {formattedNum(daiPerBnb, true)}</TYPE.main>\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {daiPair && totalLiquidity ? formatPercent(daiPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n        <RowFixed>\n          <TYPE.main>BUSD/BNB: {formattedNum(busdPerBnb, true)}</TYPE.main>\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {busdPair && totalLiquidity ? formatPercent(busdPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n        <RowFixed>\n          <TYPE.main>USDT/BNB: {formattedNum(usdtPerBnb, true)}</TYPE.main>\n          <TYPE.light style={{ marginLeft: '10px' }}>\n            {usdtPair && totalLiquidity ? formatPercent(usdtPair.trackedReserveUSD / totalLiquidity) : '-'}\n          </TYPE.light>\n        </RowFixed>\n      </AutoColumn>\n    </PriceCard>\n  )\n}\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/PairChart/index.js",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/LPList/index.js",["1842","1843","1844","1845","1846"],"import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${props => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","/workspace/algocloud-frontend/src/modules/order/importer/orderImporterActions.tsx",[],"/workspace/algocloud-frontend/src/view/auth/TenantNewForm.tsx",[],"/workspace/algocloud-frontend/src/view/auth/TenantSelectForm.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/user/UserTable.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/user/UserFilter.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationActions.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListFilter.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/list/TenantListTable.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/tenant/form/TenantForm.tsx",[],"/workspace/algocloud-frontend/src/modules/order/importer/orderImporterReducers.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/analytics/AnalyticsCard.tsx",[],"/workspace/algocloud-frontend/src/modules/order/view/orderViewReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/order/form/orderFormReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsActions.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroyReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/order/list/orderListReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/form/tenantFormActions.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/DropdownSelect/index.js",["1847","1848"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { ChevronDown as Arrow } from 'react-feather'\nimport { TYPE } from '../../Theme'\nimport { StyledIcon } from '..'\n\nconst Wrapper = styled.div`\n  z-index: 20;\n  position: relative;\n  background-color: #000;\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \n  width: 100px;\n  padding: 4px 10px;\n  padding-right: 6px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 34px;\n  padding-top: 40px;\n  width: calc(100% - 40px);\n  background-color: ${({ theme }) => theme.bg1};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 10px 10px;\n  border-radius: 8px;\n  width: calc(100% - 20px);\n  font-weight: 500;\n  font-size: 1rem;\n  color: black;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ArrowStyled = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-left: 6px;\n`\n\nconst DropdownSelect = ({ options, active, setActive, color }) => {\n  const [showDropdown, toggleDropdown] = useState(false)\n\n  return (\n    <Wrapper open={showDropdown} color={color}>\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\n        <TYPE.main>{active}</TYPE.main>\n        <StyledIcon>\n          <ArrowStyled />\n        </StyledIcon>\n      </RowBetween>\n      {showDropdown && (\n        <Dropdown>\n          <AutoColumn gap=\"20px\">\n            {Object.keys(options).map((key, index) => {\n              let option = options[key]\n              return (\n                option !== active && (\n                  <Row\n                    onClick={() => {\n                      toggleDropdown(!showDropdown)\n                      setActive(option)\n                    }}\n                    key={index}\n                  >\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\n                  </Row>\n                )\n              )\n            })}\n          </AutoColumn>\n        </Dropdown>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default DropdownSelect\n","/workspace/algocloud-frontend/src/view/dashboard/analytics/components/TradingviewChart/index.js",[],"/workspace/algocloud-frontend/src/view/shared/view/ImagesViewItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/importer/styles/ImporterErrorStatusMessage.tsx",[],"/workspace/algocloud-frontend/src/view/product/list/ProductListItem.tsx",[],"/workspace/algocloud-frontend/src/modules/order/list/orderListSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/order/list/orderListActions.tsx",[],"/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroySelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/order/destroy/orderDestroyActions.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/FilesFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/SwitchFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/product/view/ProductViewItem.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/QuestionHelper/index.tsx",[],"/workspace/algocloud-frontend/src/view/customer/autocomplete/CustomerAutocompleteFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/product/autocomplete/ProductAutocompleteFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/CandleChart/index.js",[],"/workspace/algocloud-frontend/src/modules/order/orderService.tsx",[],"/workspace/algocloud-frontend/src/view/shared/view/FilesViewItem.tsx",[],"/workspace/algocloud-frontend/src/view/customer/view/CustomerViewItem.tsx",[],"/workspace/algocloud-frontend/src/modules/order/orderSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/user/view/UserViewItem.tsx",[],"/workspace/algocloud-frontend/src/view/user/autocomplete/UserAutocompleteFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/customer/list/CustomerListItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/table/FileListView.tsx",[],"/workspace/algocloud-frontend/src/view/user/list/UserListItem.tsx",[],"/workspace/algocloud-frontend/src/view/shared/urlfy.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/form/tenantFormSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/superadminSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/superadmin/user/UserStatusView.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/user/userSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/user/userEnumerators.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/user/userActions.tsx",[],"/workspace/algocloud-frontend/src/modules/plan/planActions.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListActions.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroySelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroyActions.tsx",[],"/workspace/algocloud-frontend/src/modules/user/importer/userImporterReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/user/form/userFormReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/user/view/userViewReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/user/list/userListReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/superadminService.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/analytics/analyticsReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/tenantReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/user/userReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/list/tenantListReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/invitation/tenantInvitationReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/order/list/orderListExporterFields.tsx",[],"/workspace/algocloud-frontend/src/view/shared/uploaders/FilesUploader.tsx",[],"/workspace/algocloud-frontend/src/modules/user/userSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/AutocompleteInMemoryFormItem.tsx",[],"/workspace/algocloud-frontend/src/modules/user/userService.tsx",[],"/workspace/algocloud-frontend/src/view/user/new/UserNewFormModal.tsx",[],"/workspace/algocloud-frontend/src/modules/plan/planService.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/destroy/tenantDestroyReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/form/tenantFormReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/superadmin/tenant/list/tenantListReducers.tsx",[],"/workspace/algocloud-frontend/src/modules/user/list/userListActions.tsx",[],"/workspace/algocloud-frontend/src/modules/user/view/userViewActions.tsx",[],"/workspace/algocloud-frontend/src/modules/user/form/userFormActions.tsx",[],"/workspace/algocloud-frontend/src/modules/user/importer/userImporterActions.tsx",[],"/workspace/algocloud-frontend/src/view/product/form/ProductFormModal.tsx",[],"/workspace/algocloud-frontend/src/view/customer/form/CustomerFormModal.tsx",[],"/workspace/algocloud-frontend/src/view/user/new/UserNewForm.tsx",[],"/workspace/algocloud-frontend/src/modules/user/list/userListExporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/user/list/userListSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/user/importer/userImporterFields.tsx",[],"/workspace/algocloud-frontend/src/modules/user/importer/userImporterSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/dashboard/analytics/components/Popover/index.js",["1849"],"import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks'\n\nconst PopoverContainer = styled.div`\n  z-index: 9999;\n\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n  opacity: ${props => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.bg3};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.bg2};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\n// export interface PopoverProps {\n//   content: React.ReactNode\n//   show: boolean\n//   children: React.ReactNode\n//   placement?: Placement\n// }\n\nexport default function Popover({ content, show, children, placement = 'auto' }) {\n  const [referenceElement, setReferenceElement] = useState(null)\n  const [popperElement, setPopperElement] = useState(null)\n  const [arrowElement, setArrowElement] = useState(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } }\n    ]\n  })\n\n  useInterval(update, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","/workspace/algocloud-frontend/src/view/user/view/UserViewPage.tsx",[],"/workspace/algocloud-frontend/src/view/user/new/UserNewPage.tsx",[],"/workspace/algocloud-frontend/src/view/user/list/UserPage.tsx",[],"/workspace/algocloud-frontend/src/view/settings/SettingsFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/auditLog/AuditLogPage.tsx",[],"/workspace/algocloud-frontend/src/view/user/edit/UserEditPage.tsx",[],"/workspace/algocloud-frontend/src/view/user/importer/UserImporterPage.tsx",[],"/workspace/algocloud-frontend/src/view/plan/PlanPage.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/list/TenantListPage.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/form/TenantFormPage.tsx",[],"/workspace/algocloud-frontend/src/modules/user/userEnumerators.tsx",[],"/workspace/algocloud-frontend/src/view/shared/form/items/TagsFormItem.tsx",[],"/workspace/algocloud-frontend/src/view/auth/PasswordChangeFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/auth/ProfileFormPage.tsx",[],"/workspace/algocloud-frontend/src/view/user/view/UserView.tsx",[],"/workspace/algocloud-frontend/src/modules/user/view/userViewSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/user/view/UserViewToolbar.tsx",[],"/workspace/algocloud-frontend/src/modules/user/form/userFormSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/user/list/UserTable.tsx",[],"/workspace/algocloud-frontend/src/view/user/list/UserFilter.tsx",[],"/workspace/algocloud-frontend/src/view/user/list/UserToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/settings/SettingsFormToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/settings/SettingsForm.tsx",[],"/workspace/algocloud-frontend/src/modules/settings/settingsSelectors.tsx",[],"/workspace/algocloud-frontend/src/view/auditLog/AuditLogFilter.tsx",[],"/workspace/algocloud-frontend/src/view/auditLog/AuditLogTable.tsx",[],"/workspace/algocloud-frontend/src/view/auditLog/AuditLogToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/user/edit/UserEditForm.tsx",[],"/workspace/algocloud-frontend/src/view/plan/PlanCardFree.tsx",[],"/workspace/algocloud-frontend/src/view/plan/PlanCardPaid.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/list/TenantListFilter.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/list/TenantListTable.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/list/TenantListToolbar.tsx",[],"/workspace/algocloud-frontend/src/view/tenant/form/TenantForm.tsx",[],"/workspace/algocloud-frontend/src/view/auth/PasswordChangeForm.tsx",[],"/workspace/algocloud-frontend/src/view/auth/ProfileForm.tsx",[],"/workspace/algocloud-frontend/src/view/user/view/UserStatusView.tsx",[],"/workspace/algocloud-frontend/src/view/shared/view/CustomViewItem.tsx",[],"/workspace/algocloud-frontend/src/modules/settings/settingsEnumerators.tsx",[],"/workspace/algocloud-frontend/src/modules/plan/planSelectors.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/destroy/tenantDestroySelectors.tsx",[],"/workspace/algocloud-frontend/src/view/plan/styles/PlanCardWrapper.tsx",[],"/workspace/algocloud-frontend/src/modules/tenant/tenantSelectors.tsx",[],{"ruleId":"1850","replacedBy":"1851"},{"ruleId":"1852","replacedBy":"1853"},{"ruleId":"1854","severity":1,"message":"1855","line":12,"column":8,"nodeType":"1856","messageId":"1857","endLine":12,"endColumn":21},{"ruleId":"1854","severity":1,"message":"1858","line":12,"column":25,"nodeType":"1856","messageId":"1857","endLine":12,"endColumn":36},{"ruleId":"1854","severity":1,"message":"1859","line":13,"column":50,"nodeType":"1856","messageId":"1857","endLine":13,"endColumn":76},{"ruleId":"1854","severity":1,"message":"1860","line":14,"column":47,"nodeType":"1856","messageId":"1857","endLine":14,"endColumn":70},{"ruleId":"1854","severity":1,"message":"1861","line":16,"column":46,"nodeType":"1856","messageId":"1857","endLine":16,"endColumn":68},{"ruleId":"1850","replacedBy":"1851"},{"ruleId":"1852","replacedBy":"1853"},{"ruleId":"1862","severity":1,"message":"1863","line":191,"column":26,"nodeType":"1864","messageId":"1865","endLine":191,"endColumn":28},{"ruleId":"1854","severity":1,"message":"1866","line":2,"column":10,"nodeType":"1856","messageId":"1857","endLine":2,"endColumn":14},{"ruleId":"1854","severity":1,"message":"1867","line":3,"column":8,"nodeType":"1856","messageId":"1857","endLine":3,"endColumn":25},{"ruleId":"1854","severity":1,"message":"1868","line":4,"column":8,"nodeType":"1856","messageId":"1857","endLine":4,"endColumn":30},{"ruleId":"1854","severity":1,"message":"1869","line":5,"column":8,"nodeType":"1856","messageId":"1857","endLine":5,"endColumn":35},{"ruleId":"1854","severity":1,"message":"1870","line":6,"column":8,"nodeType":"1856","messageId":"1857","endLine":6,"endColumn":26},{"ruleId":"1854","severity":1,"message":"1871","line":7,"column":8,"nodeType":"1856","messageId":"1857","endLine":7,"endColumn":28},{"ruleId":"1854","severity":1,"message":"1872","line":8,"column":8,"nodeType":"1856","messageId":"1857","endLine":8,"endColumn":28},{"ruleId":"1854","severity":1,"message":"1873","line":9,"column":8,"nodeType":"1856","messageId":"1857","endLine":9,"endColumn":27},{"ruleId":"1854","severity":1,"message":"1874","line":10,"column":8,"nodeType":"1856","messageId":"1857","endLine":10,"endColumn":27},{"ruleId":"1854","severity":1,"message":"1875","line":55,"column":9,"nodeType":"1856","messageId":"1857","endLine":55,"endColumn":27},{"ruleId":"1876","severity":1,"message":"1877","line":115,"column":13,"nodeType":"1878","endLine":115,"endColumn":17},{"ruleId":"1879","severity":1,"message":"1880","line":5,"column":10,"nodeType":"1856","messageId":"1857","endLine":5,"endColumn":15},{"ruleId":"1879","severity":1,"message":"1881","line":5,"column":17,"nodeType":"1856","messageId":"1857","endLine":5,"endColumn":23},{"ruleId":"1879","severity":1,"message":"1882","line":5,"column":25,"nodeType":"1856","messageId":"1857","endLine":5,"endColumn":38},{"ruleId":"1879","severity":1,"message":"1883","line":5,"column":40,"nodeType":"1856","messageId":"1857","endLine":5,"endColumn":48},{"ruleId":"1879","severity":1,"message":"1884","line":6,"column":10,"nodeType":"1856","messageId":"1857","endLine":6,"endColumn":20},{"ruleId":"1879","severity":1,"message":"1885","line":8,"column":8,"nodeType":"1856","messageId":"1857","endLine":8,"endColumn":17},{"ruleId":"1879","severity":1,"message":"1886","line":9,"column":8,"nodeType":"1856","messageId":"1857","endLine":9,"endColumn":16},{"ruleId":"1879","severity":1,"message":"1887","line":11,"column":10,"nodeType":"1856","messageId":"1857","endLine":11,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1888","line":12,"column":8,"nodeType":"1856","messageId":"1857","endLine":12,"endColumn":19},{"ruleId":"1879","severity":1,"message":"1889","line":13,"column":8,"nodeType":"1856","messageId":"1857","endLine":13,"endColumn":21},{"ruleId":"1879","severity":1,"message":"1890","line":14,"column":8,"nodeType":"1856","messageId":"1857","endLine":14,"endColumn":20},{"ruleId":"1879","severity":1,"message":"1891","line":15,"column":8,"nodeType":"1856","messageId":"1857","endLine":15,"endColumn":18},{"ruleId":"1879","severity":1,"message":"1892","line":17,"column":8,"nodeType":"1856","messageId":"1857","endLine":17,"endColumn":15},{"ruleId":"1879","severity":1,"message":"1893","line":18,"column":8,"nodeType":"1856","messageId":"1857","endLine":18,"endColumn":21},{"ruleId":"1879","severity":1,"message":"1894","line":19,"column":10,"nodeType":"1856","messageId":"1857","endLine":19,"endColumn":34},{"ruleId":"1879","severity":1,"message":"1895","line":19,"column":36,"nodeType":"1856","messageId":"1857","endLine":19,"endColumn":50},{"ruleId":"1879","severity":1,"message":"1896","line":26,"column":10,"nodeType":"1856","messageId":"1857","endLine":26,"endColumn":18},{"ruleId":"1879","severity":1,"message":"1897","line":72,"column":7,"nodeType":"1856","messageId":"1857","endLine":72,"endColumn":12},{"ruleId":"1854","severity":1,"message":"1866","line":4,"column":10,"nodeType":"1856","messageId":"1857","endLine":4,"endColumn":14},{"ruleId":"1854","severity":1,"message":"1898","line":16,"column":9,"nodeType":"1856","messageId":"1857","endLine":16,"endColumn":16},{"ruleId":"1899","severity":1,"message":"1900","line":36,"column":11,"nodeType":"1878","endLine":36,"endColumn":29},{"ruleId":"1899","severity":1,"message":"1901","line":42,"column":9,"nodeType":"1878","endLine":42,"endColumn":72},{"ruleId":"1899","severity":1,"message":"1900","line":26,"column":11,"nodeType":"1878","endLine":26,"endColumn":29},{"ruleId":"1899","severity":1,"message":"1902","line":216,"column":11,"nodeType":"1878","endLine":216,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1901","line":245,"column":21,"nodeType":"1878","endLine":245,"endColumn":102},{"ruleId":"1899","severity":1,"message":"1901","line":308,"column":19,"nodeType":"1878","endLine":308,"endColumn":91},{"ruleId":"1899","severity":1,"message":"1901","line":320,"column":19,"nodeType":"1878","endLine":320,"endColumn":91},{"ruleId":"1899","severity":1,"message":"1901","line":331,"column":30,"nodeType":"1878","endLine":331,"endColumn":63},{"ruleId":"1899","severity":1,"message":"1901","line":336,"column":23,"nodeType":"1878","endLine":336,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":340,"column":23,"nodeType":"1878","endLine":340,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":343,"column":23,"nodeType":"1878","endLine":343,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":350,"column":23,"nodeType":"1878","endLine":350,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":354,"column":23,"nodeType":"1878","endLine":354,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":357,"column":23,"nodeType":"1878","endLine":357,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":364,"column":23,"nodeType":"1878","endLine":364,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":368,"column":23,"nodeType":"1878","endLine":368,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":371,"column":23,"nodeType":"1878","endLine":371,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":379,"column":23,"nodeType":"1878","endLine":379,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":385,"column":25,"nodeType":"1878","endLine":385,"endColumn":82},{"ruleId":"1899","severity":1,"message":"1901","line":396,"column":25,"nodeType":"1878","endLine":396,"endColumn":82},{"ruleId":"1899","severity":1,"message":"1901","line":415,"column":15,"nodeType":"1878","endLine":415,"endColumn":78},{"ruleId":"1899","severity":1,"message":"1901","line":426,"column":17,"nodeType":"1878","endLine":426,"endColumn":50},{"ruleId":"1899","severity":1,"message":"1901","line":437,"column":21,"nodeType":"1878","endLine":437,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":438,"column":21,"nodeType":"1878","endLine":438,"endColumn":63},{"ruleId":"1899","severity":1,"message":"1901","line":446,"column":21,"nodeType":"1878","endLine":446,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":448,"column":23,"nodeType":"1878","endLine":448,"endColumn":65},{"ruleId":"1899","severity":1,"message":"1901","line":455,"column":21,"nodeType":"1878","endLine":455,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":462,"column":23,"nodeType":"1878","endLine":462,"endColumn":65},{"ruleId":"1899","severity":1,"message":"1901","line":469,"column":21,"nodeType":"1878","endLine":469,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":476,"column":23,"nodeType":"1878","endLine":476,"endColumn":79},{"ruleId":"1903","severity":1,"message":"1904","line":126,"column":9,"nodeType":"1905","endLine":126,"endColumn":73},{"ruleId":"1899","severity":1,"message":"1902","line":157,"column":11,"nodeType":"1878","endLine":157,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1906","line":169,"column":15,"nodeType":"1878","endLine":169,"endColumn":42},{"ruleId":"1899","severity":1,"message":"1901","line":171,"column":17,"nodeType":"1878","endLine":171,"endColumn":42},{"ruleId":"1899","severity":1,"message":"1902","line":191,"column":21,"nodeType":"1878","endLine":191,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1902","line":197,"column":21,"nodeType":"1878","endLine":197,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1902","line":223,"column":29,"nodeType":"1878","endLine":223,"endColumn":52},{"ruleId":"1899","severity":1,"message":"1902","line":241,"column":27,"nodeType":"1878","endLine":241,"endColumn":50},{"ruleId":"1899","severity":1,"message":"1902","line":255,"column":21,"nodeType":"1878","endLine":255,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1906","line":259,"column":21,"nodeType":"1878","endLine":259,"endColumn":67},{"ruleId":"1899","severity":1,"message":"1902","line":270,"column":21,"nodeType":"1878","endLine":270,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1906","line":274,"column":21,"nodeType":"1878","endLine":274,"endColumn":100},{"ruleId":"1899","severity":1,"message":"1901","line":293,"column":11,"nodeType":"1878","endLine":293,"endColumn":74},{"ruleId":"1899","severity":1,"message":"1901","line":303,"column":11,"nodeType":"1878","endLine":303,"endColumn":74},{"ruleId":"1899","severity":1,"message":"1901","line":313,"column":11,"nodeType":"1878","endLine":313,"endColumn":74},{"ruleId":"1899","severity":1,"message":"1906","line":323,"column":17,"nodeType":"1878","endLine":323,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1901","line":324,"column":17,"nodeType":"1878","endLine":324,"endColumn":28},{"ruleId":"1899","severity":1,"message":"1906","line":327,"column":17,"nodeType":"1878","endLine":327,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1901","line":330,"column":17,"nodeType":"1878","endLine":330,"endColumn":28},{"ruleId":"1899","severity":1,"message":"1906","line":333,"column":17,"nodeType":"1878","endLine":333,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1901","line":334,"column":17,"nodeType":"1878","endLine":334,"endColumn":28},{"ruleId":"1899","severity":1,"message":"1900","line":26,"column":11,"nodeType":"1878","endLine":26,"endColumn":29},{"ruleId":"1899","severity":1,"message":"1902","line":183,"column":13,"nodeType":"1878","endLine":183,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1901","line":207,"column":19,"nodeType":"1878","endLine":207,"endColumn":117},{"ruleId":"1899","severity":1,"message":"1901","line":215,"column":23,"nodeType":"1878","endLine":215,"endColumn":103},{"ruleId":"1899","severity":1,"message":"1901","line":256,"column":25,"nodeType":"1878","endLine":256,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":261,"column":25,"nodeType":"1878","endLine":261,"endColumn":88},{"ruleId":"1899","severity":1,"message":"1901","line":264,"column":25,"nodeType":"1878","endLine":264,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":272,"column":23,"nodeType":"1878","endLine":272,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":276,"column":23,"nodeType":"1878","endLine":276,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":279,"column":23,"nodeType":"1878","endLine":279,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":286,"column":23,"nodeType":"1878","endLine":286,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":290,"column":23,"nodeType":"1878","endLine":290,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":293,"column":23,"nodeType":"1878","endLine":293,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":301,"column":23,"nodeType":"1878","endLine":301,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":305,"column":23,"nodeType":"1878","endLine":305,"endColumn":86},{"ruleId":"1899","severity":1,"message":"1901","line":308,"column":23,"nodeType":"1878","endLine":308,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":319,"column":15,"nodeType":"1878","endLine":319,"endColumn":78},{"ruleId":"1899","severity":1,"message":"1901","line":337,"column":15,"nodeType":"1878","endLine":337,"endColumn":48},{"ruleId":"1899","severity":1,"message":"1901","line":344,"column":17,"nodeType":"1878","endLine":344,"endColumn":50},{"ruleId":"1899","severity":1,"message":"1901","line":355,"column":21,"nodeType":"1878","endLine":355,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":361,"column":21,"nodeType":"1878","endLine":361,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":362,"column":21,"nodeType":"1878","endLine":362,"endColumn":94},{"ruleId":"1899","severity":1,"message":"1901","line":367,"column":21,"nodeType":"1878","endLine":367,"endColumn":32},{"ruleId":"1899","severity":1,"message":"1901","line":369,"column":23,"nodeType":"1878","endLine":369,"endColumn":96},{"ruleId":"1899","severity":1,"message":"1900","line":72,"column":13,"nodeType":"1878","endLine":72,"endColumn":31},{"ruleId":"1899","severity":1,"message":"1901","line":83,"column":25,"nodeType":"1878","endLine":83,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":87,"column":25,"nodeType":"1878","endLine":87,"endColumn":88},{"ruleId":"1899","severity":1,"message":"1901","line":90,"column":25,"nodeType":"1878","endLine":90,"endColumn":50},{"ruleId":"1899","severity":1,"message":"1901","line":95,"column":25,"nodeType":"1878","endLine":95,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":99,"column":25,"nodeType":"1878","endLine":99,"endColumn":88},{"ruleId":"1899","severity":1,"message":"1901","line":102,"column":25,"nodeType":"1878","endLine":102,"endColumn":50},{"ruleId":"1899","severity":1,"message":"1901","line":129,"column":15,"nodeType":"1878","endLine":129,"endColumn":48},{"ruleId":"1899","severity":1,"message":"1901","line":138,"column":15,"nodeType":"1878","endLine":138,"endColumn":44},{"ruleId":"1899","severity":1,"message":"1901","line":147,"column":13,"nodeType":"1878","endLine":147,"endColumn":76},{"ruleId":"1879","severity":1,"message":"1907","line":2,"column":18,"nodeType":"1856","messageId":"1857","endLine":2,"endColumn":21},{"ruleId":"1899","severity":1,"message":"1901","line":69,"column":11,"nodeType":"1878","endLine":69,"endColumn":33},{"ruleId":"1899","severity":1,"message":"1901","line":78,"column":11,"nodeType":"1878","endLine":78,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1906","line":92,"column":25,"nodeType":"1878","endLine":92,"endColumn":38},{"ruleId":"1899","severity":1,"message":"1908","line":110,"column":13,"nodeType":"1878","endLine":110,"endColumn":25},{"ruleId":"1899","severity":1,"message":"1901","line":114,"column":11,"nodeType":"1878","endLine":114,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1906","line":129,"column":25,"nodeType":"1878","endLine":129,"endColumn":49},{"ruleId":"1899","severity":1,"message":"1908","line":143,"column":13,"nodeType":"1878","endLine":143,"endColumn":25},{"ruleId":"1899","severity":1,"message":"1909","line":203,"column":17,"nodeType":"1878","endLine":203,"endColumn":45},{"ruleId":"1899","severity":1,"message":"1901","line":40,"column":13,"nodeType":"1878","endLine":49,"endColumn":14},{"ruleId":"1899","severity":1,"message":"1901","line":56,"column":13,"nodeType":"1878","endLine":56,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":61,"column":13,"nodeType":"1878","endLine":61,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1901","line":66,"column":13,"nodeType":"1878","endLine":66,"endColumn":36},{"ruleId":"1903","severity":1,"message":"1910","line":232,"column":7,"nodeType":"1905","endLine":232,"endColumn":24},{"ruleId":"1903","severity":1,"message":"1911","line":256,"column":7,"nodeType":"1905","endLine":256,"endColumn":23},{"ruleId":"1899","severity":1,"message":"1902","line":458,"column":15,"nodeType":"1878","endLine":458,"endColumn":26},{"ruleId":"1899","severity":1,"message":"1902","line":475,"column":21,"nodeType":"1878","endLine":475,"endColumn":63},{"ruleId":"1899","severity":1,"message":"1902","line":500,"column":15,"nodeType":"1878","endLine":500,"endColumn":26},{"ruleId":"1862","severity":1,"message":"1863","line":54,"column":13,"nodeType":"1912","messageId":"1913","endLine":54,"endColumn":19},{"ruleId":"1899","severity":1,"message":"1902","line":118,"column":13,"nodeType":"1878","endLine":118,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1902","line":125,"column":13,"nodeType":"1878","endLine":125,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1902","line":310,"column":9,"nodeType":"1878","endLine":310,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1902","line":413,"column":15,"nodeType":"1878","endLine":413,"endColumn":41},{"ruleId":"1899","severity":1,"message":"1902","line":455,"column":9,"nodeType":"1878","endLine":455,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1901","line":225,"column":11,"nodeType":"1878","endLine":225,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1902","line":301,"column":9,"nodeType":"1878","endLine":301,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1901","line":111,"column":15,"nodeType":"1878","endLine":111,"endColumn":41},{"ruleId":"1899","severity":1,"message":"1908","line":134,"column":15,"nodeType":"1878","endLine":134,"endColumn":57},{"ruleId":"1899","severity":1,"message":"1901","line":141,"column":13,"nodeType":"1878","endLine":141,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1906","line":148,"column":25,"nodeType":"1878","endLine":148,"endColumn":38},{"ruleId":"1899","severity":1,"message":"1908","line":162,"column":15,"nodeType":"1878","endLine":162,"endColumn":27},{"ruleId":"1899","severity":1,"message":"1901","line":153,"column":15,"nodeType":"1878","endLine":153,"endColumn":73},{"ruleId":"1899","severity":1,"message":"1901","line":179,"column":13,"nodeType":"1878","endLine":179,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1909","line":182,"column":17,"nodeType":"1878","endLine":182,"endColumn":46},{"ruleId":"1899","severity":1,"message":"1909","line":193,"column":17,"nodeType":"1878","endLine":193,"endColumn":46},{"ruleId":"1899","severity":1,"message":"1901","line":209,"column":15,"nodeType":"1878","endLine":209,"endColumn":42},{"ruleId":"1899","severity":1,"message":"1909","line":214,"column":19,"nodeType":"1878","endLine":214,"endColumn":48},{"ruleId":"1899","severity":1,"message":"1909","line":231,"column":19,"nodeType":"1878","endLine":231,"endColumn":48},{"ruleId":"1899","severity":1,"message":"1901","line":291,"column":13,"nodeType":"1878","endLine":291,"endColumn":38},{"ruleId":"1899","severity":1,"message":"1901","line":295,"column":11,"nodeType":"1878","endLine":295,"endColumn":36},{"ruleId":"1899","severity":1,"message":"1902","line":329,"column":9,"nodeType":"1878","endLine":329,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1901","line":51,"column":13,"nodeType":"1878","endLine":51,"endColumn":24},{"ruleId":"1899","severity":1,"message":"1901","line":45,"column":11,"nodeType":"1878","endLine":45,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1908","line":46,"column":11,"nodeType":"1878","endLine":46,"endColumn":54},{"ruleId":"1899","severity":1,"message":"1901","line":51,"column":11,"nodeType":"1878","endLine":51,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1908","line":52,"column":11,"nodeType":"1878","endLine":52,"endColumn":54},{"ruleId":"1899","severity":1,"message":"1901","line":57,"column":11,"nodeType":"1878","endLine":57,"endColumn":22},{"ruleId":"1899","severity":1,"message":"1908","line":58,"column":11,"nodeType":"1878","endLine":58,"endColumn":54},{"ruleId":"1899","severity":1,"message":"1901","line":151,"column":13,"nodeType":"1878","endLine":151,"endColumn":38},{"ruleId":"1899","severity":1,"message":"1901","line":155,"column":11,"nodeType":"1878","endLine":155,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":163,"column":11,"nodeType":"1878","endLine":163,"endColumn":34},{"ruleId":"1899","severity":1,"message":"1901","line":166,"column":11,"nodeType":"1878","endLine":166,"endColumn":35},{"ruleId":"1899","severity":1,"message":"1902","line":175,"column":9,"nodeType":"1878","endLine":175,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1901","line":58,"column":9,"nodeType":"1878","endLine":58,"endColumn":20},{"ruleId":"1899","severity":1,"message":"1902","line":77,"column":21,"nodeType":"1878","endLine":77,"endColumn":46},{"ruleId":"1879","severity":1,"message":"1914","line":1,"column":10,"nodeType":"1856","messageId":"1857","endLine":1,"endColumn":19},"no-native-reassign",["1915"],"no-negated-in-lhs",["1916"],"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'GlobalStyle' is defined but never used.","'LocalStorageContextUpdater' is defined but never used.","'TokenDataContextUpdater' is defined but never used.","'PairDataContextUpdater' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'i18n' is defined but never used.","'DashboardBarChart' is defined but never used.","'DashboardDoughnutChart' is defined but never used.","'DashboardHorizontalBarChart' is defined but never used.","'DashboardLineChart' is defined but never used.","'DashboardMixChartOne' is defined but never used.","'DashboardMixChartTwo' is defined but never used.","'DashboardPolarChart' is defined but never used.","'DashboardRadarChart' is defined but never used.","'backgroundImageUrl' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'Route' is defined but never used.","'Switch' is defined but never used.","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'TokenPage' is defined but never used.","'PairPage' is defined but never used.","'isAddress' is defined but never used.","'AccountPage' is defined but never used.","'AllTokensPage' is defined but never used.","'AllPairsPage' is defined but never used.","'PinnedData' is defined but never used.","'SideNav' is defined but never used.","'AccountLookup' is defined but never used.","'OVERVIEW_TOKEN_BLACKLIST' is defined but never used.","'PAIR_BLACKLIST' is defined but never used.","'isMobile' is defined but never used.","'Right' is assigned a value but never used.","'logoUrl' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component largeHeader must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component main must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component body must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","The 'dynamicPositions' conditional could make the dependencies of useMemo Hook (at line 142) change on every render. To fix this, wrap the initialization of 'dynamicPositions' in its own useMemo() Hook.","VariableDeclarator","Imported JSX component header must be in PascalCase or SCREAMING_SNAKE_CASE","'css' is defined but never used.","Imported JSX component light must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component small must be in PascalCase or SCREAMING_SNAKE_CASE","The 'uniqueTokens' array makes the dependencies of useMemo Hook (at line 310) change on every render. To fix this, wrap the initialization of 'uniqueTokens' in its own useMemo() Hook.","The 'uniquePairs' array makes the dependencies of useMemo Hook (at line 371) change on every render. To fix this, wrap the initialization of 'uniquePairs' in its own useMemo() Hook.","ReturnStatement","expectedReturnValue","'Placement' is defined but never used.","no-global-assign","no-unsafe-negation"]